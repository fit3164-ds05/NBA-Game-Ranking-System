import { Model } from '../contract/Models';
import { NotificationId } from '../contract/Notifications';
import { VerbId } from '../contract/Verbs';
import { VersionNumber } from './VersionNumber';
export declare type NotificationHandler = (notification: Notification) => void;
export interface ExecuteParameters {
    [key: string]: Model;
}
export interface ExecuteResponse {
    result: Model;
}
export interface Notification {
    notificationId: NotificationId;
    data: Model;
}
export interface InternalApiDispatcher {
    execute(verb: VerbId, parameters: ExecuteParameters): Promise<ExecuteResponse>;
    registerNotificationHandler(handler: NotificationHandler): void;
    unregisterNotificationHandler(handler: NotificationHandler): void;
}
export declare type InternalApiDispatcherFactory = (internalContractVersion: VersionNumber) => InternalApiDispatcher;
//# sourceMappingURL=InternalApiDispatcher.d.ts.map