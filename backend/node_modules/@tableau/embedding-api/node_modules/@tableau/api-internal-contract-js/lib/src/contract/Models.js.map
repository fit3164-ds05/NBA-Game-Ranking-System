{"version":3,"file":"Models.js","sourceRoot":"","sources":["../../../src/contract/Models.ts"],"names":[],"mappings":"","sourcesContent":["import { VersionNumber } from '../JsApiInternalContract';\nimport * as Enums from './Enums';\n\nexport interface Model {}\n\nexport interface FilterableModel extends Model {\n  // Used for event models that should be filtered on the client side.\n  // This prevents extensions from seeing events relevant only to another extension\n  // (for example, a settings changed event).  Note: this does not protect against\n  // an extension modifying our library and seeing events for other extensions, so do\n  // not treat this as a security measure.  If there are events that must be protected\n  // from leaking between extensions, that must be done at the c++ layer.\n  filterByLocator: boolean;\n  locator: ExtensionLocator;\n}\n\n//// ==================================================================================================================\n//// Workbook Object\n//// ==================================================================================================================\n\nexport interface SheetPath extends Model {\n  sheetName: string;\n  isDashboard: boolean;\n  storyboard?: string;\n  flipboardZoneID?: number;\n  storyPointID?: number;\n}\n\nexport interface VisualId extends Model {\n  worksheet: string;\n  dashboard?: string;\n  storyboard?: string;\n  flipboardZoneID?: number;\n  storyPointID?: number;\n}\n\nexport interface DashboardZone extends Model {\n  name: string;\n  zoneId: number;\n  zoneType: Enums.DashboardObjectType;\n  height: number;\n  width: number;\n  x: number;\n  y: number;\n  sheetInfo?: SheetInfo;\n  isFloating?: boolean; // added in version 1.6.0\n  isVisible?: boolean; // added in version 1.6.0\n  fieldId?: string; // field ID given only when zoneType is Filter\n}\n\nexport interface SheetInfo extends Model {\n  name: string;\n  sheetType: Enums.SheetType;\n  url?: string; // currently used only by Embedding\n}\n\nexport interface EmbeddingSheetInfo extends SheetInfo {\n  sizeConstraint: SizeConstraint;\n}\n\nexport interface ContainedSheetInfoModel extends Model {\n  name: string;\n  sheetType: Enums.SheetType.Dashboard | Enums.SheetType.Worksheet; // Contained sheet cannot be a story\n  dashboardZones: Array<DashboardZone>;\n  zoneId: number;\n}\n\nexport interface ParameterInfo extends Model {\n  name: string;\n  fieldName: string;\n  dataType: Enums.DataType;\n  currentValue: DataValue;\n  allowableValuesType: Enums.DomainRestrictionType;\n  allowableValues?: Array<DataValue>;\n  minValue?: DataValue;\n  maxValue?: DataValue;\n  stepSize?: number;\n  dateStepPeriod?: Enums.DateStepPeriod;\n}\n\nexport interface DashboardObjectPositionAndSizeUpdate extends Model {\n  dashboardObjectID: number;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\nexport interface FontNameAndInfo extends Model {\n  fontName: string;\n  fontBinaryInfo: Uint8Array;\n}\n\nexport interface FirstVizSizeKnownEvent extends Model {\n  sheetSize: SizeConstraint;\n  chromeHeight: number;\n}\n\nexport interface FirstPulseMetricSizeKnownEvent extends Model {\n  width: number;\n  height: number;\n}\n\nexport interface FilterEvent extends Model {\n  fieldName: string;\n  visualId: VisualId;\n  fieldId?: string; // FieldId will be undefined in older tableau servers.\n}\n\nexport interface SummaryDataEvent extends Model {\n  visualId: VisualId;\n}\n\nexport interface CustomMarkClickedContextMenuEvent extends Model {\n  visualId: VisualId;\n  contextMenuId: string;\n}\n\nexport interface DialogUpdateEvent extends Model {\n  isCloseEvent: boolean;\n  closePayload?: string;\n}\n\nexport interface ContextMenuEvent extends FilterableModel {\n  id: string;\n}\n\nexport interface SettingsEvent extends FilterableModel {\n  newSettings: { [key: string]: string };\n}\n\nexport interface DashboardLayoutEvent extends FilterableModel {\n  zones: Array<DashboardZone>;\n  activeZoneId?: number;\n  activeDashboardName?: string;\n}\n\nexport interface ToolbarStateEvent extends Model {\n  toolbarState: ToolbarState;\n}\n\nexport interface PulseFiltersChangedEvent extends Model {\n  fieldNames: Array<string>;\n}\n\nexport interface PulseInsightDiscoveredEvent extends Model {\n  id: string;\n  characterization: string;\n  markup: string;\n  question: string;\n  score: number;\n  type: string;\n  version: number;\n}\n\nexport interface PulseUrlChangedEvent extends Model {\n  oldUrl: string;\n  newUrl: string;\n  context: string | undefined;\n}\n\nexport interface PulseTimeDimensionChangedEvent extends Model {\n  timeDimension: Enums.PulseTimeDimension;\n}\n\nexport interface PulseErrorEvent extends Model {\n  message: string;\n  httpStatus: number;\n  messageVisibility: Enums.PulseErrorMessageVisibility;\n}\n\n//// ==================================================================================================================\n//// Data Tables\n//// ==================================================================================================================\n\nexport interface DataValue {\n  // These are optional because of ShowDataTableFormat options\n  /* tslint:disable:no-any */\n  value?: any;\n  /* tslint:enable:no-any */\n  formattedValue?: string;\n  aliasedValue?: string;\n  hasAlias?: boolean;\n}\n\nexport interface DataTable {\n  dataTable: Array<Array<DataValue>>;\n  headers: Array<DataHeader>;\n  marks?: Array<MarkInfo>;\n}\n\nexport interface DataTableReader {\n  id: string;\n  totalRowCount: number;\n}\n\nexport interface MarkInfo {\n  type: Enums.MarkType;\n  color: string;\n  tupleId?: number;\n}\n\nexport interface DataHeader {\n  dataType: Enums.DataType;\n  fieldName: string;\n  isReferenced: boolean;\n  index: number;\n  fieldCaption: string;\n}\n\nexport interface UnderlyingDataTable {\n  data: DataTable;\n  isSummary: boolean;\n}\n\nexport interface SelectedMarksTable {\n  // If marks are selected across panes, there may be multiple tables of data representing the marks\n  data: Array<DataTable>;\n}\n\nexport interface HighlightedMarksTable {\n  // If marks are highlighted across panes, there may be multiple tables of data representing the marks\n  data: Array<DataTable>;\n}\n\n//// ==================================================================================================================\n//// Annotation Models\n//// ==================================================================================================================\n\nexport interface Annotation extends Model {\n  annotateEnum: Enums.AnnotateEnum;\n  annotationId: number;\n  annotationPlainText: string;\n  annotationText: string;\n  tupleId?: number;\n}\n\n//// ==================================================================================================================\n//// Frelard Namespace Models\n//// ==================================================================================================================\n\nexport interface DashboardExtensionLocator extends Model {\n  instanceId: string;\n  dashboardPath: SheetPath;\n}\n\nexport interface WorksheetExtensionLocator extends Model {\n  instanceId: string;\n  visualId: VisualId;\n}\n\nexport interface InvalidExtensionLocator extends Model {\n  instanceId: string;\n}\n\nexport type ExtensionLocator = DashboardExtensionLocator | WorksheetExtensionLocator | InvalidExtensionLocator;\n\nexport interface ExtensionInstance extends Model {\n  url: string;\n  locator: ExtensionLocator;\n}\n\nexport interface ExtensionEnvironment extends Model {\n  extensionContext: Enums.ExtensionContext;\n  extensionMode: Enums.ExtensionMode;\n  extensionLocale: string;\n  extensionLanguage: string;\n  extensionCountry: string | undefined; // This was introduced in 2022.2\n  workbookFormatting?: WorkbookFormatting | undefined;\n  tableauVersion: string;\n  operatingSystem: string;\n  apiVersion: string;\n  userId?: string;\n  siteId?: string;\n  siteNamespace?: string;\n  workbookId?: string;\n  uniqueUserId: string | undefined; // This was introduced in 2023.1\n  platformVersion: VersionNumber;\n  featureFlags?: string[];\n}\n\nexport interface ExtensionSettingsInfo extends Model {\n  settingsValues: { [key: string]: string };\n}\n\nexport interface WorkbookFormatting extends Model {\n  formattingSheets: Array<FormattingSheet>;\n}\n\nexport interface WorkbookFormattingEvent extends FilterableModel {\n  formattingSheets: Array<FormattingSheet>;\n}\n\nexport interface WorksheetFormattingEvent extends Model {\n  formattingSheets: Array<FormattingSheet>;\n  visualId: VisualId;\n}\n\nexport interface FormattingSheet extends Model {\n  classNameKey: Enums.ClassNameKey;\n  cssProperties: React.CSSProperties;\n}\n\nexport interface ExtensionDashboardInfo extends Model {\n  extensionZoneId: number;\n  name: string;\n  zones: Array<DashboardZone>;\n  size: SizeInfo;\n  activeDashboardObjectId: number;\n}\n\nexport interface ExtensionWorksheetInfo extends Model {\n  visualId: VisualId;\n  size: SizeInfo;\n  backgroundColor: string;\n  formatting: WorkbookFormatting;\n}\n\nexport interface ExtensionBootstrapInfo extends Model {\n  extensionInstance: ExtensionInstance;\n  extensionEnvironment: ExtensionEnvironment;\n  extensionDashboardInfo?: ExtensionDashboardInfo;\n  extensionWorksheetInfo?: ExtensionWorksheetInfo;\n  extensionSettingsInfo: ExtensionSettingsInfo;\n  extensionDialogPayload: string;\n}\n\nexport interface SizeInfo extends Model {\n  h: number;\n  w: number;\n}\n\n//// ==================================================================================================================\n//// DataSource Models\n//// ==================================================================================================================\nexport type DataSourceMap = { [key: string]: DataSource };\nexport type WorksheetDataSchemaMap = { [key: string]: WorksheetDataSourceInfo };\n\nexport interface DataSchema extends Model {\n  dataSources: DataSourceMap;\n  worksheetDataSchemaMap: WorksheetDataSchemaMap;\n}\n\nexport interface DataSource extends Model {\n  name: string;\n  id: string;\n  extractUpdateTime?: string;\n  isExtract: boolean;\n  fields: Array<Field>;\n  isPublished?: boolean;\n  publishedUrl?: string;\n}\n\nexport interface FieldBase extends Model {\n  name: string;\n  description: string | undefined;\n  dataType: Enums.DataType | undefined;\n  aggregation: Enums.FieldAggregationType;\n  role: Enums.FieldRoleType;\n  columnType: Enums.ColumnType;\n  isCalculatedField: boolean;\n  isCombinedField: boolean;\n  isGenerated: boolean;\n  isGeospatial: boolean;\n  isHidden: boolean;\n  isPresentOnPublishedDatasource: boolean;\n}\n\nexport interface FieldInstance extends FieldBase {\n  fieldId: string;\n}\n\nexport interface Field extends FieldBase {\n  id: string;\n}\n\n// Represents all tables used in the current data prep canvas for a datasource.\n// This may contain tables from separate connections.\nexport interface JoinDescription extends Model {\n  tables: Array<TableInfo>;\n}\n\nexport interface TableInfos extends Model {\n  tables: Array<TableInfo>;\n}\n\n// Internal representation of a table\nexport interface TableInfo extends Model {\n  name: string;\n  id: string;\n  customSQL: string | undefined;\n  connectionClassName: string | undefined;\n  connectionId: string;\n}\n\nexport interface ConnectionDescriptionSummary extends Model {\n  name: string;\n  id: string;\n  type: string;\n  serverURI: string;\n}\n\nexport type WorksheetField = Field;\n\nexport interface WorksheetDataSourceInfo extends Model {\n  primaryDataSource: string;\n  referencedDataSourceList: Array<string>;\n}\n\nexport interface LogicalTableInfo extends Model {\n  id: string;\n  caption: string;\n}\n\n//// ==================================================================================================================\n//// Errors\n//// ==================================================================================================================\nexport interface InternalTableauError extends Error {\n  errorCode: Enums.ErrorCodes;\n}\n\n//// ==================================================================================================================\n//// Filter Models\n//// ==================================================================================================================\nexport interface Filter extends Model {\n  filterType: Enums.FilterType;\n  fieldCaption: string;\n  fieldName: string;\n  visualId: VisualId;\n}\n\nexport interface CategoricalFilter extends Filter {\n  values: Array<DataValue>;\n  isExclude: boolean;\n  isAllSelected?: boolean;\n}\n\nexport interface HierarchicalFilter extends Filter {\n  dimensionName: string;\n  hierarchyCaption: string;\n  values: Array<HierarchicalDataValue>;\n  levels: number;\n  levelInfo: Array<HierarchicalLevelInfo>;\n  isAllSelected: boolean;\n}\n\nexport interface HierarchicalDataValue {\n  value: DataValue;\n  hierarchicalPath: string;\n  level: number;\n}\n\nexport interface HierarchicalLevelInfo {\n  name: string;\n  levelSelectionState: Enums.HierarchicalLevelSelectionState;\n}\n\nexport interface RangeFilter extends Filter {\n  min: DataValue;\n  max: DataValue;\n  includeNullValues: boolean;\n}\n\nexport interface RelativeDateFilter extends Filter {\n  anchorDate: DataValue;\n  periodType: Enums.DateStepPeriod;\n  rangeType: Enums.DateRangeType;\n  rangeN: number;\n}\n\nexport interface CategoricalDomain {\n  values: Array<DataValue>;\n}\n\nexport interface RangeDomain {\n  min: DataValue;\n  max: DataValue;\n}\n\nexport interface TestConversionModel {\n  value: number;\n}\n\n//// ==================================================================================================================\n//// Embedding Models\n//// ==================================================================================================================\nexport interface EmbeddingBootstrapInfo {\n  workbookName: string;\n  currWorksheetName: string;\n  oldSheetName?: string; // only used by TabSwitched. Added in 1.96.0\n  publishedSheets: Array<EmbeddingSheetInfo>;\n  dashboardZones: Array<DashboardZone>;\n  platformVersion: VersionNumber;\n  canDownloadWorkbook: boolean;\n  story?: StoryModel; // Added in 1.108.0\n}\n\nexport interface EmbeddingPulseBootstrapInfo {\n  iframeTitle: string;\n}\n\nexport interface SizeConstraint {\n  minWidth: number;\n  minHeight: number;\n  maxWidth: number;\n  maxHeight: number;\n}\n\nexport interface WorkbookPublishedAsModel {\n  newUrl: string;\n}\n\nexport interface ToolbarState {\n  canRedo: boolean;\n  canUndo: boolean;\n}\n\nexport interface UrlActionModel extends Model {\n  url: string;\n  target: string;\n}\n\nexport interface SharedFilterWorksheetModel extends Model {\n  worksheetName: string;\n  isActive: boolean;\n  isEnabled: boolean;\n  isSelected: boolean;\n}\n\nexport interface SharedFilterModel extends Model {\n  worksheets: Array<SharedFilterWorksheetModel>;\n}\n\nexport interface UserModel extends Model {\n  userId: number;\n  userName: string;\n  userFriendlyName: string;\n}\n\nexport interface CustomViewModel extends Model {\n  id?: number;\n  name: string;\n  urlId: string;\n  url: string;\n  startViewId: string;\n  shared: boolean;\n  owner: UserModel;\n  luid: string;\n  isDefault: boolean;\n}\n\nexport interface CustomViewInfoModel extends Model {\n  currentView?: CustomViewModel;\n  customViewsList: Array<CustomViewModel>;\n}\n\nexport interface StoryModel extends Model {\n  activeStoryPointIndex: number;\n  storyPoints: Array<StoryPointModel>;\n}\n\nexport interface StoryPointModel extends Model {\n  caption: string;\n  index: number;\n  updated: boolean;\n  storyPointId: number;\n  containedSheetInfo?: ContainedSheetInfoModel;\n}\n\nexport interface EmbeddingAbstractQuery {\n  abstractQuery: string;\n}\n\n//// ==================================================================================================================\n//// Export Models\n//// ==================================================================================================================\nexport type ExportCrosstabSheetMap = { [key: string]: string };\n\nexport type ScalingSelection = Enums.FitPages | Enums.PageScalingOption;\n\nexport interface ExportFile extends Model {\n  resultKey: string;\n  hasUserSpecificContent: boolean;\n}\n\nexport interface ExportLayoutOptions extends Model {\n  pageSizeOption: Enums.PageSizeOption;\n  pageOrientationOption: Enums.PageOrientation;\n  pageScaleMode: Enums.ScaleMode;\n  pageScalePercent: number;\n  pageFitHorizontal: number;\n  pageFitVertical: number;\n  imageHeight: number;\n  imageWidth: number;\n}\n\nexport interface SheetModel extends Model {\n  sheet: string;\n  isDashboard: boolean;\n  isStory: boolean;\n  namesOfSubsheets: string[];\n}\n\nexport interface ServerSheetModel extends SheetModel {\n  isPublished: boolean;\n  baseViewThumbLink: string;\n}\n\nexport interface PDFSheet extends ServerSheetModel {\n  isSelected: boolean;\n  exportLayoutOptions: ExportLayoutOptions;\n}\n\nexport interface ExportPDFOptions extends Model {\n  currentSheet: string;\n  exportLayoutOptions: ExportLayoutOptions;\n  sheetOptions: PDFSheet[];\n}\n\nexport interface VisualSpecification {\n  rowFields: FieldInstance[];\n  columnFields: FieldInstance[];\n  activeMarksSpecificationIndex: number;\n  marksSpecifications: MarksSpecification[];\n}\n\nexport interface MarksSpecification {\n  primitiveType: Enums.MarkType;\n  encodings: Encoding[];\n}\n\nexport interface Encoding {\n  id: string;\n  fieldEncodingId: string;\n  type: Enums.EncodingType;\n  field: FieldInstance;\n}\n\nexport interface TooltipTextRequest extends Model {\n  visualIdPresModel: VisualId;\n  tupleId: number;\n}\n\nexport interface SelectTuplesInteraction extends Model {\n  visualIdPresModel: VisualId;\n  tupleIds: Array<number>;\n  selectOptions: Enums.SelectOptions;\n  tooltipContext?: TooltipContext;\n}\n\nexport interface HoverTupleInteraction extends Model {\n  visualIdPresModel: VisualId;\n  tupleId: number;\n  tooltipContext?: TooltipContext | null;\n  allowHoverActions?: boolean;\n}\n\nexport interface TooltipContext extends Model {\n  tooltipAnchorPoint: Point;\n}\n\nexport interface Point extends Model {\n  x: number;\n  y: number;\n}\n\n/**\n * A PulseFieldValueArray is an array that can contain strings, booleans, or nulls, but will never contain both strings and booleans at the same time.\n */\nexport type PulseFieldValueArray = Array<boolean | null> | Array<string | null>;\n"]}