import { ExecuteParameters, ExecuteResponse, Notification, VerbId } from '../../JsApiInternalContract';
export interface ExternalContractVersionConverter {
    /**
     * This function is called when we receive a newer verb and parameters from external
     * and need to downgrade it for an older platform
     */
    downgradeExecuteCall(verb: any, parameters: any): {
        verb: VerbId;
        parameters: ExecuteParameters;
    };
    /**
     * This function is called when we receive a response back from an older platform and we need
     * to upgrade it to a newer external. The verb and parameters provide context to be able to make
     * decisions on what we need to do.
     */
    upgradeExecuteReturn(executeResponse: ExecuteResponse, verb: VerbId, parameters: ExecuteParameters): ExecuteResponse;
    /** This function is called when we receive a notification from platform and we need to upgrade it to external's version */
    upgradeNotification(notification: Notification): Notification;
}
//# sourceMappingURL=ExternalContractVersionConverter.d.ts.map