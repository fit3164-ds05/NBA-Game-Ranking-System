{"version":3,"file":"CrossFramePreparedMessage.js","sourceRoot":"","sources":["../../../src/messaging/CrossFramePreparedMessage.ts"],"names":[],"mappings":";;AAGA;;;GAGG;AACH;IACE;;;;;OAKG;IACH,mCAA2B,QAAiB,EAAU,OAAe,EAAU,OAAe;QAAnE,aAAQ,GAAR,QAAQ,CAAS;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAG,CAAC;IAElG,sBAAW,kDAAW;aAAtB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC/B,CAAC;;;OAAA;IAEM,wCAAI,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC;IACd,CAAC;IACH,gCAAC;AAAD,CAAC,AAjBD,IAiBC;AAjBY,8DAAyB","sourcesContent":["import { Message } from './interface/MessageTypes';\nimport { PreparedMessage } from './interface/PreparedMessage';\n\n/**\n * Implementation of the PreparedMessage interface used to post messages between\n * two frames using window.postMessage\n */\nexport class CrossFramePreparedMessage implements PreparedMessage {\n  /**\n   * Creates an instance of CrossFramePreparedMessage.\n   * @param _message The message to be sent\n   * @param _target The target window where the message will be sent\n   * @param _origin The targetOrigin where this message can be received\n   */\n  public constructor(private _message: Message, private _target: Window, private _origin: string) {}\n\n  public get messageGuid(): string {\n    return this._message.msgGuid;\n  }\n\n  public send(): PreparedMessage {\n    this._target.postMessage(this._message, this._origin);\n    return this;\n  }\n}\n"]}