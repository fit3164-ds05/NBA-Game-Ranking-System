{"version":3,"file":"InternalContractVersionConverter.js","sourceRoot":"","sources":["../../../src/versioning/InternalContractVersionConverter.ts"],"names":[],"mappings":"","sourcesContent":["import { ExecuteParameters, ExecuteResponse, Notification, VerbId } from '../JsApiInternalContract';\n\n// We need to disable any because these methods need to be generic\n// tslint:disable:no-any\n\nexport interface InternalContractVersionConverter {\n  /** This function is called when we receive old vers and parameters from the external before we send it to platform */\n  upgradeExecuteCall(verb: any, parameters: any): { verb: VerbId; parameters: ExecuteParameters };\n\n  /** This function is called when we received a response back from platform and we need to downgrade it to external's version */\n  downgradeExecuteReturn(executeResponse: ExecuteResponse): ExecuteResponse;\n\n  /** This function is called when we receive a notification from platform and we need to downgrade it to external's version */\n  downgradeNotification(notification: Notification): Notification;\n}\n"]}