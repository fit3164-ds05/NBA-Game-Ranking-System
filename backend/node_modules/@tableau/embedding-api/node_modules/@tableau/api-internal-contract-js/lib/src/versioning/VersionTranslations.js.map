{"version":3,"file":"VersionTranslations.js","sourceRoot":"","sources":["../../../src/versioning/VersionTranslations.ts"],"names":[],"mappings":";;AAEA,2DAA2D;AAa3D,oEAAoE;AACpE,6FAA6F;AAC7F,mGAAmG;AAEnG,qBAAqB;AACrB,kEAAkE;AAClE,8DAA8D;AAE9D,uBAAuB;AACvB,kEAAkE;AAClE,8DAA8D;AAE9D,SAAgB,uBAAuB,CAAC,eAAgC;IACtE,wEAAwE;IACxE,wEAAwE;IACxE,0DAA0D;IAE1D,IAAM,aAAa,GAAG,eAAe,CAAC,MAAgC,CAAC;IACvE,IAAI,aAAa,CAAC,sBAAsB,KAAK,SAAS,EAAE;QACtD,aAAa,CAAC,sBAAsB,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;YACtD,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;KACJ;IAED,OAAO,eAAe,CAAC;AACzB,CAAC;AAfD,0DAeC;AAED,SAAgB,wBAAwB,CAAC,YAA0B;IACjE,2FAA2F;IAC3F,2FAA2F;IAE3F,IAAI,YAAY,CAAC,cAAc,KAAK,8BAAc,CAAC,oBAAoB,EAAE;QACvE,IAAM,WAAW,GAAG,YAAY,CAAC,IAAgB,CAAC;QAClD,IAAI,WAAW,CAAC,eAAe,KAAK,SAAS,EAAE;YAC7C,WAAW,CAAC,eAAe,GAAG,CAAC,CAAC;SACjC;KACF;IAED,OAAO,YAAY,CAAC;AACtB,CAAC;AAZD,4DAYC;AAED,yEAAyE;AACzE,SAAS,4BAA4B,CAAC,eAAgC,EAAE,UAA0B;;IAChG,IAAM,aAAa,GAAG,eAAe,CAAC,MAAgC,CAAC;IAEvE,gBAAI,aAAa,0CAAE,sBAAsB,0CAAE,UAAU;QACnD,aAAa,CAAC,sBAAsB,CAAC,UAAU,CAAC,gBAAgB;YAC9D,aAAa,CAAC,sBAAsB,CAAC,UAAU,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,EAApC,CAAoC,CAAC,CAAC;IACzH,OAAO,eAAe,CAAC;AACzB,CAAC;AAED,yEAAyE;AACzE,yEAAyE;AACzE,SAAS,wCAAwC,CAAC,YAA0B,EAAE,UAA0B;IACtG,IAAI,YAAY,CAAC,cAAc,KAAK,8BAAc,CAAC,0BAA0B,EAAE;QAC7E,IAAM,UAAU,GAAG,YAAY,CAAC,IAA0B,CAAC;QAC3D,YAAY,CAAC,IAAI,GAAG,UAAU,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,EAApC,CAAoC,CAAC,CAAC;KACrG;IAED,OAAO,YAAY,CAAC;AACtB,CAAC;AAED,gHAAgH;AAChH,IAAM,wBAAwB,GAAG,qHAA0E,CAAC;AAE/F,QAAA,8BAA8B,GAAG,UAAC,QAAyB;IACtE,OAAA,4BAA4B,CAAC,QAAQ,EAAE,wBAAwB,CAAC;AAAhE,CAAgE,CAAC;AACtD,QAAA,0CAA0C,GAAG,UAAC,YAA0B;IACnF,OAAA,wCAAwC,CAAC,YAAY,EAAE,wBAAwB,CAAC;AAAhF,CAAgF,CAAC","sourcesContent":["import { ClassNameKey, ExecuteParameters, ExecuteResponse, ExtensionBootstrapInfo, Notification, VerbId } from '../JsApiInternalContract';\nimport { VisualId, WorkbookFormatting } from '../contract/Models';\nimport { NotificationId } from '../contract/Notifications';\n\n// tslint:disable:no-any\n\n/** This function is called when we receive old vers and parameters from the external before we send it to platform */\nexport type UpgradeExecuteCall = (verb: VerbId, parameters: ExecuteParameters) => { verb: VerbId; parameters: ExecuteParameters };\n\n/** This function is called when we received a response back from platform and we need to downgrade it to external's version */\nexport type DowngradeExecuteReturn = (executeResponse: ExecuteResponse) => ExecuteResponse;\n\n/** This function is called when we receive a notification from platform and we need to downgrade it to external's version */\nexport type DowngradeNotification = (notification: Notification) => Notification;\n\n// This is where we will start to define some of these translations.\n// When modifying existing models, add the requisite conversion functions here, then use them\n// in the VersionConverterFactory implementation. Import old versions as you would any other module\n\n// 0 <-> Translations\n// Uncomment this line to import from the V0 definition of the API\n// import * as V0 from '@tableau-api-internal-contract-js_v0';\n\n// 1 <-> 2 Translations\n// Uncomment this line to import from the V1 definition of the API\n// import * as V1 from '@tableau-api-internal-contract-js_v1';\n\nexport function DowngradeWorksheetNames(executeResponse: ExecuteResponse): ExecuteResponse {\n  // Fix the dashboard friendly name issue. The structures are compatible,\n  // so we still return the original reply, but we copy the SheetInfo.name\n  // into the DashboardZone.name, where v1 wants to find it.\n\n  const bootstrapInfo = executeResponse.result as ExtensionBootstrapInfo;\n  if (bootstrapInfo.extensionDashboardInfo !== undefined) {\n    bootstrapInfo.extensionDashboardInfo.zones.forEach((zone) => {\n      if (zone.sheetInfo) {\n        zone.name = zone.sheetInfo.name;\n      }\n    });\n  }\n\n  return executeResponse;\n}\n\nexport function DowngradeFlipboardZoneID(notification: Notification): Notification {\n  // Fix the FlipboardZoneId issue. Older external versions still check for flipboardZoneIDs.\n  // When running against a newer server, if flipboardZoneId is absent, set it to default(0).\n\n  if (notification.notificationId === NotificationId.SelectedMarksChanged) {\n    const visualModel = notification.data as VisualId;\n    if (visualModel.flipboardZoneID === undefined) {\n      visualModel.flipboardZoneID = 0;\n    }\n  }\n\n  return notification;\n}\n\n// Filter out formatting sheets that are specified in the classNames list\nfunction DowngradeWorksheetFormatting(executeResponse: ExecuteResponse, classNames: ClassNameKey[]): ExecuteResponse {\n  const bootstrapInfo = executeResponse.result as ExtensionBootstrapInfo;\n\n  if (bootstrapInfo?.extensionWorksheetInfo?.formatting)\n    bootstrapInfo.extensionWorksheetInfo.formatting.formattingSheets =\n      bootstrapInfo.extensionWorksheetInfo.formatting.formattingSheets.filter((x) => !classNames.includes(x.classNameKey));\n  return executeResponse;\n}\n\n// Filter out formatting sheets that are specified in the classNames list\n// Filter out formatting sheets that are specified in the classNames list\nfunction DowngradeWorksheetFormattingNotification(notification: Notification, classNames: ClassNameKey[]): Notification {\n  if (notification.notificationId === NotificationId.WorksheetFormattingChanged) {\n    const formatting = notification.data as WorkbookFormatting;\n    notification.data = formatting.formattingSheets.filter((x) => !classNames.includes(x.classNameKey));\n  }\n\n  return notification;\n}\n\n// We added new enum values for ClassNameKeys enum in 176. Need to filter them out if the client version is <176\nconst ClassNameKeysToFilter175 = [ClassNameKey.RowDividers, ClassNameKey.ColumnDividers, ClassNameKey.Pane];\n\nexport const DowngradeWorksheetFomatting175 = (response: ExecuteResponse) =>\n  DowngradeWorksheetFormatting(response, ClassNameKeysToFilter175);\nexport const DowngradeWorksheetFomattingNotification175 = (notification: Notification) =>\n  DowngradeWorksheetFormattingNotification(notification, ClassNameKeysToFilter175);\n"]}