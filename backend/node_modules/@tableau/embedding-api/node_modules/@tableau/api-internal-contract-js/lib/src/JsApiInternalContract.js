"use strict";
/**
 * This is your main. This is where you re-export everything you want to be publicly available.
 *
 * The build enforces that the file has the same name as the global variable that is exported.
 */
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
// The following polyfills are needed for IE11
require("core-js/es/number/is-integer");
require("core-js/es/number/is-nan");
require("core-js/es/object/assign");
// Export the version of the internal contract to be available at runtime
//  This file is generated by yarn publish:bump via scripts/publish-check.ts
//  updateInternalContractRuntimeVersion in the monorepo root.
var internalContractVersion = require("../internal-contract-version.json");
exports.INTERNAL_CONTRACT_VERSION = internalContractVersion;
__export(require("./contract/DataTypeConverter"));
__export(require("./contract/Enums"));
__export(require("./contract/Notifications"));
__export(require("./contract/Parameters"));
__export(require("./contract/Verbs"));
__export(require("./interface/AskDataInterface"));
__export(require("./interface/PulseInterface"));
__export(require("./interface/VqlInterface"));
__export(require("./messaging/CrossFrameMessenger"));
__export(require("./messaging/interface/MessageTypes"));
__export(require("./versioning/VersionConverterFactory"));
__export(require("./versioning/external/ExternalIdentityVersionConverter"));
__export(require("./versioning/external/ExternalVersionConverterFactory"));
// Export the version number of messaging for consumers to use.
// Be very careful making any updates to this contract which break version compatibility.
exports.MESSAGING_VERSION = {
    major: 1,
    minor: 0,
    fix: 0,
};
//# sourceMappingURL=JsApiInternalContract.js.map