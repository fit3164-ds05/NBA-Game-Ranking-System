import { ParameterInfo, SheetPath } from '@tableau/api-internal-contract-js';
import { ParameterImpl } from '../Impl/ParameterImpl';
import { ApiService } from './ServiceRegistry';
/**
 * API Service for interacting with Tableau Parameters
 */
export interface ParametersService extends ApiService {
    /**
     * Gets the parameters which are in use for a given sheet
     *
     * @param {SheetPath} sheetPath The path to the sheet
     * @returns {Promise<Array<Parameter>>} Promise which resolves with an array of Parameter objects
     */
    getParametersForSheetAsync(sheetPath: SheetPath): Promise<Array<ParameterImpl>>;
    /**
     * Gets all the parameters for the workbook
     *
     * @returns {Promise<Array<Parameter>>} Promise which resolves with an array of Parameter objects
     */
    getAllParametersAsync(): Promise<Array<ParameterImpl>>;
    changeParameterValueAsync(fieldName: string, newValue: string): Promise<ParameterInfo>;
    findParameterByNameAsync(name: string): Promise<ParameterImpl | undefined>;
    findParameterByGlobalFieldNameAsync(fieldName: string): Promise<ParameterImpl | undefined>;
}
//# sourceMappingURL=ParametersService.d.ts.map