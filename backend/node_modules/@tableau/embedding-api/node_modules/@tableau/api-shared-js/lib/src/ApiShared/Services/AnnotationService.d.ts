import { Annotation, MarkInfo } from '@tableau/api-external-contract-js';
import { VisualId } from '@tableau/api-internal-contract-js';
import { ApiService } from './ServiceRegistry';
/**
 * Service for implementing the logic for various Annotation calls
 *
 * @interface AnnotationService
 * @extends {ApiService}
 */
export interface AnnotationService extends ApiService {
    /**
     * Annotate mark in the current worksheet.
     * Supports selection by tupleid.
     *
     * @param {VisualId} visualId - The visual id of the worksheet to annotate.
     * @param {MarkInfo} mark - The mark to annotate.
     * @param {string} annotationText - The text to annotate the mark with.
     * @return This function does not return anything.
     */
    annotateMarkAsync(visualId: VisualId, mark: MarkInfo, annotationText: string): Promise<void>;
    /**
     * Gets the annotations for the current worksheet.
     *
     * @param {VisualId} visualId - The visual id
     * @returns {Promise<Array<Annotation>} - Array of annotations
     */
    getAnnotationsAsync(visualId: VisualId): Promise<Array<Annotation>>;
    /**
     * Remove an annotation from the current worksheet.
     * Supports selection by annotationId.
     *
     * @param {VisualId}    visualId - The visual id of the worksheet to remove annotation from.
     * @param {Annotation}  annotation - The annotation to remove.
     * @returns This function does not return anything.
     */
    removeAnnotationAsync(visualId: VisualId, annotation: Annotation): Promise<void>;
}
//# sourceMappingURL=AnnotationService.d.ts.map