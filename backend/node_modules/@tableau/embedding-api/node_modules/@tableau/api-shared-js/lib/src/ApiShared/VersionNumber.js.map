{"version":3,"file":"VersionNumber.js","sourceRoot":"","sources":["../../../src/ApiShared/VersionNumber.ts"],"names":[],"mappings":";;AAAA,8EAA+D;AAC/D,+CAA8C;AAG9C;;;GAGG;AACH;IAOE,8DAA8D;IAC9D,4CAA4C;IAC5C,uBAAmB,aAAqB,EAAE,OAAgB;QACxD,IAAM,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAE3B,IAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAf,CAAe,CAAC,CAAC;QACnE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,MAAM,IAAI,2BAAY,CAAC,qCAAU,CAAC,aAAa,EAAE,6BAA2B,aAAe,CAAC,CAAC;SAC9F;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAEO,sCAAc,GAAtB,UAAuB,gBAAwB;QAC7C,IAAM,aAAa,GAAG,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,gBAAgB,EAAE;YACrB,OAAO,aAAa,CAAC;SACtB;QAED,mGAAmG;QACnG,IAAM,OAAO,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;IAC/D,CAAC;IAED,sBAAW,yCAAc;aAAzB;YACE,OAAU,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,GAAK,CAAC;QACnD,CAAC;;;OAAA;IAED,sBAAW,6CAAkB;aAA7B;YACE,OAAU,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,GAAG,aAAQ,IAAI,CAAC,KAAO,CAAC;QACrE,CAAC;;;OAAA;IACH,oBAAC;AAAD,CAAC,AA3CD,IA2CC;AA3CY,sCAAa","sourcesContent":["import { ErrorCodes } from '@tableau/api-external-contract-js';\nimport { TableauError } from './TableauError';\nimport { VersionNumberContract } from './VersionNumberContract';\n\n/**\n * Represents the current version of the extensions, embedding\n * and extensions-api-types library\n */\nexport class VersionNumber implements VersionNumberContract {\n  public major: number;\n  public minor: number;\n  public fix: number;\n  public build: number;\n  public isAlpha: boolean;\n\n  // private constructor so everyone uses the singleton instance\n  // build numbers have this form: M.m.f-pre.N\n  public constructor(versionString: string, isAlpha: boolean) {\n    const partStr = versionString.split('-');\n    this.build = this.getBuildNumber(partStr[1]);\n    versionString = partStr[0];\n\n    const parts = versionString.split('.').map((p) => parseInt(p, 10));\n    if (parts.length !== 3) {\n      throw new TableauError(ErrorCodes.InternalError, `Invalid version number: ${versionString}`);\n    }\n\n    this.major = parts[0];\n    this.minor = parts[1];\n    this.fix = parts[2];\n    this.isAlpha = isAlpha;\n  }\n\n  private getBuildNumber(preReleaseString: string): number {\n    const noBuildNumber = -1;\n    if (!preReleaseString) {\n      return noBuildNumber;\n    }\n\n    // The preRelease string has this form: pre.N, but we don't depend on the actual string being 'pre'\n    const partStr = preReleaseString.split('.');\n    return partStr[1] ? parseInt(partStr[1], 10) : noBuildNumber;\n  }\n\n  public get formattedValue(): string {\n    return `${this.major}.${this.minor}.${this.fix}`;\n  }\n\n  public get fullFormattedValue(): string {\n    return `${this.major}.${this.minor}.${this.fix}-pre.${this.build}`;\n  }\n}\n"]}