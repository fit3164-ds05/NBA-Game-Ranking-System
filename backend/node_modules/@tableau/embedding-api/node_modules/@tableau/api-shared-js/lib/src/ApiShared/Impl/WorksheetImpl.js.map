{"version":3,"file":"WorksheetImpl.js","sourceRoot":"","sources":["../../../../src/ApiShared/Impl/WorksheetImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport {\n  ApiMenuType,\n  ContextMenuOptions,\n  DateRangeType,\n  ErrorCodes,\n  FilterNullOption,\n  IncludeDataValuesOption,\n  PeriodType,\n  SelectionUpdateType,\n  SharedErrorCodes,\n  TooltipContext,\n} from '@tableau/api-external-contract-js';\nimport { DataSchema, DataSource as DataSourceInfo, VisualId, WorksheetDataSourceInfo } from '@tableau/api-internal-contract-js';\nimport { DataSource } from '../DataSource';\nimport { LogicalTable } from '../LogicalTable';\nimport { AccessibilityService } from '../Services/AccessibilityService';\nimport { AnnotationService } from '../Services/AnnotationService';\nimport { DataSourceService } from '../Services/DataSourceService';\nimport { ExternalContextMenuService } from '../Services/ExternalContextMenuService';\nimport { FilterService } from '../Services/FilterService';\nimport { GetDataService, GetDataType } from '../Services/GetDataService';\nimport { SelectionService } from '../Services/SelectionService';\nimport { ApiServiceRegistry, ServiceNames } from '../Services/ServiceRegistry';\nimport { VisualModelService } from '../Services/VisualModelService';\nimport { TableauError } from '../TableauError';\nimport { ErrorHelpers } from '../Utils/ErrorHelpers';\nimport { DashboardImpl } from './DashboardImpl';\nimport { DataSourceImpl } from './DataSourceImpl';\nimport { SheetImpl } from './SheetImpl';\nimport { SheetInfoImpl } from './SheetInfoImpl';\nimport { StoryPointImpl } from './StoryPointImpl';\n\nexport class WorksheetImpl extends SheetImpl {\n  public constructor(\n    sheetInfoImpl: SheetInfoImpl,\n    _registryId: number,\n    private _visualId: VisualId,\n    private _parentDashboardImpl: DashboardImpl | null,\n    private _parentStoryPointImpl: StoryPointImpl | null,\n    private _backgroundColor: string | null = null,\n    private _formatting: Contract.WorkbookFormatting | null = null,\n  ) {\n    super(sheetInfoImpl, _registryId);\n  }\n\n  public get parentDashboard(): DashboardImpl | null {\n    return this._parentDashboardImpl;\n  }\n\n  public get parentStoryPoint(): StoryPointImpl | null {\n    return this._parentStoryPointImpl;\n  }\n\n  public get visualId(): VisualId {\n    return this._visualId;\n  }\n\n  public getMaxPageRowLimit(): number {\n    return 10000;\n  }\n\n  public get backgroundColor(): string | null {\n    return this._backgroundColor;\n  }\n\n  public get formatting(): Contract.WorksheetFormatting | null {\n    return this._formatting;\n  }\n\n  public applyFilterAsync(\n    fieldName: string,\n    values: Array<string>,\n    updateType: Contract.FilterUpdateType,\n    options: Contract.FilterOptions,\n  ): Promise<string> {\n    ErrorHelpers.verifyEnumValue<Contract.FilterUpdateType>(updateType, Contract.FilterUpdateType, 'Contract.FilterUpdateType');\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<FilterService>(ServiceNames.Filter);\n    return service.applyFilterAsync(this.visualId, fieldName, values, updateType, options);\n  }\n\n  public applyRangeFilterAsync(fieldName: string, filterOptions: Contract.RangeFilterOptions): Promise<string> {\n    ErrorHelpers.verifyParameter(fieldName, 'fieldName');\n    ErrorHelpers.verifyParameter(filterOptions, 'filterOptions');\n    if (filterOptions.nullOption) {\n      ErrorHelpers.verifyEnumValue<FilterNullOption>(filterOptions.nullOption, FilterNullOption, 'FilterNullOption');\n    } else {\n      ErrorHelpers.verifyRangeParamType(filterOptions.min, filterOptions.max);\n    }\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<FilterService>(ServiceNames.Filter);\n    return service.applyRangeFilterAsync(this.visualId, fieldName, filterOptions);\n  }\n\n  public applyHierarchicalFilterAsync(\n    fieldName: string,\n    values: Array<string> | Contract.HierarchicalLevels,\n    updateType: Contract.FilterUpdateType,\n    options: Contract.FilterOptions,\n  ): Promise<string> {\n    ErrorHelpers.verifyParameter(fieldName, 'fieldName');\n    ErrorHelpers.verifyParameter(values, 'values');\n    ErrorHelpers.verifyEnumValue<Contract.FilterUpdateType>(updateType, Contract.FilterUpdateType, 'Contract.FilterUpdateType');\n    if (!Array.isArray(values) && !values.levels) {\n      throw new TableauError(\n        ErrorCodes.InvalidParameter,\n        'values parameter for applyHierarchicalFilterAsync must be an array or contain a levels key',\n      );\n    }\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<FilterService>(ServiceNames.Filter);\n    return service.applyHierarchicalFilterAsync(this.visualId, fieldName, values, updateType, options);\n  }\n\n  public clearFilterAsync(fieldName: string): Promise<string> {\n    ErrorHelpers.verifyParameter(fieldName, 'fieldName');\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<FilterService>(ServiceNames.Filter);\n    return service.clearFilterAsync(this.visualId, fieldName);\n  }\n\n  public applyRelativeDateFilterAsync(fieldName: string, options: Contract.RelativeDateFilterOptions): Promise<string> {\n    ErrorHelpers.verifyStringParameter(fieldName, 'fieldName');\n    ErrorHelpers.verifyParameter(options, 'options');\n    ErrorHelpers.verifyEnumValue<PeriodType>(options.periodType, PeriodType, 'PeriodType');\n    ErrorHelpers.verifyEnumValue<DateRangeType>(options.rangeType, DateRangeType, 'DateRangeType');\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<FilterService>(ServiceNames.Filter);\n    return service.applyRelativeDateFilterAsync(this.visualId, fieldName, options);\n  }\n\n  public getDataSourcesAsync(): Promise<Array<Contract.DataSource>> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<DataSourceService>(ServiceNames.DataSourceService);\n    return service.getDataSourcesAsync(this.visualId).then<Array<Contract.DataSource>>((result) => {\n      const dataSchema: DataSchema = result;\n      const worksheetDataSourceInfo: WorksheetDataSourceInfo = dataSchema.worksheetDataSchemaMap[this.name];\n\n      const dataSources: Array<Contract.DataSource> = [];\n\n      // First, add the primary datasource.  By convention, it comes first in the returned array.\n      const primaryId: string = worksheetDataSourceInfo.primaryDataSource;\n      dataSources.push(this.createDataSourceFromInfo(dataSchema.dataSources[primaryId]));\n\n      // Then, loop through any secondary data sources and add them.\n      for (const secondaryId of worksheetDataSourceInfo.referencedDataSourceList) {\n        if (secondaryId !== primaryId) {\n          dataSources.push(this.createDataSourceFromInfo(dataSchema.dataSources[secondaryId]));\n        }\n      }\n\n      return dataSources;\n    });\n  }\n\n  public getFiltersAsync(): Promise<Array<Contract.Filter>> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<FilterService>(ServiceNames.Filter);\n    return service.getFiltersAsync(this.visualId);\n  }\n\n  public getSelectedMarksAsync(): Promise<Contract.MarksCollection> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<GetDataService>(ServiceNames.GetData);\n    return service.getSelectedMarksAsync(this.visualId);\n  }\n\n  public getHighlightedMarksAsync(): Promise<Contract.MarksCollection> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<GetDataService>(ServiceNames.GetData);\n    return service.getHighlightedMarksAsync(this.visualId);\n  }\n\n  public getSummaryDataAsync(options: Contract.GetSummaryDataOptions): Promise<Contract.DataTable> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<GetDataService>(ServiceNames.GetData);\n    options = options || {};\n\n    return service.getUnderlyingDataAsync(\n      this.visualId,\n      GetDataType.Summary,\n      !!options.ignoreAliases,\n      !!options.ignoreSelection,\n      true,\n      options.columnsToIncludeById || [],\n      options.maxRows || 0,\n      options.includeDataValuesOption || IncludeDataValuesOption.AllValues,\n      options.applyWorksheetFormatting ?? false,\n    );\n  }\n\n  public getSummaryDataReaderAsync(pageRowCount: number, options: Contract.GetSummaryDataOptions): Promise<Contract.DataTableReader> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<GetDataService>(ServiceNames.GetData);\n    options = options || {};\n\n    return service.getSummaryDataReaderAsync(\n      this.visualId,\n      pageRowCount || this.getMaxPageRowLimit(),\n      !!options.ignoreAliases,\n      !!options.ignoreSelection,\n      true, // includeAllColumns (can be overridden by columnsToIncludeById)\n      options.columnsToIncludeById || [],\n      options.includeDataValuesOption || IncludeDataValuesOption.AllValues,\n      options.applyWorksheetFormatting ?? false,\n    );\n  }\n\n  public getVisualSpecificationAsync(): Promise<Contract.VisualSpecification> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<VisualModelService>(ServiceNames.VisualModel);\n\n    return service.getVisualSpecificationAsync(this.visualId);\n  }\n\n  public addMarksCardFieldsAsync(\n    marksCardIndex: number,\n    encodingType: Contract.EncodingType,\n    columns: Array<Contract.Column>,\n    startIndex: number,\n  ): Promise<void> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<VisualModelService>(ServiceNames.VisualModel);\n\n    return service.addMarksCardFieldsAsync(this.visualId, marksCardIndex, encodingType, columns, startIndex);\n  }\n\n  public moveMarksCardFieldAsync(marksCardIndex: number, fromIndex: number, toIndex: number, fieldCount: number): Promise<void> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<VisualModelService>(ServiceNames.VisualModel);\n\n    return service.moveMarksCardFieldAsync(this.visualId, marksCardIndex, fromIndex, toIndex, fieldCount);\n  }\n\n  public spliceMarksCardFieldsAsync(\n    marksCardIndex: number,\n    encodingType: Contract.EncodingType,\n    startIndex: number,\n    deleteCount: number,\n    columns: Array<Contract.Column>,\n  ): Promise<void> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<VisualModelService>(ServiceNames.VisualModel);\n\n    return service.spliceMarksCardFieldsAsync(this.visualId, marksCardIndex, encodingType, startIndex, deleteCount, columns);\n  }\n\n  public getSummaryColumnsInfoAsync(): Promise<Array<Contract.Column>> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<GetDataService>(ServiceNames.GetData);\n    return service.getSummaryColumnsInfoAsync(this.visualId);\n  }\n\n  public getUnderlyingDataAsync(options: Contract.GetUnderlyingDataOptions): Promise<Contract.DataTable> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<GetDataService>(ServiceNames.GetData);\n    options = options || {};\n    return service.getUnderlyingDataAsync(\n      this.visualId,\n      GetDataType.Underlying,\n      !!options.ignoreAliases,\n      !!options.ignoreSelection,\n      !!options.includeAllColumns,\n      options.columnsToIncludeById || [],\n      options.maxRows || 0,\n      options.includeDataValuesOption || IncludeDataValuesOption.AllValues,\n      options.applyWorksheetFormatting ?? false,\n    );\n  }\n\n  public getUnderlyingTablesAsync(): Promise<Array<Contract.LogicalTable>> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<DataSourceService>(ServiceNames.DataSourceService);\n    return service.getUnderlyingTablesAsync(this.visualId).then<Array<Contract.LogicalTable>>((logicalTableInfos) => {\n      return logicalTableInfos.map((logicalTableInfo) => new LogicalTable(logicalTableInfo));\n    });\n  }\n\n  public getUnderlyingTableDataAsync(logicalTableId: string, options?: Contract.GetUnderlyingDataOptions): Promise<Contract.DataTable> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<GetDataService>(ServiceNames.GetData);\n    options = options || {};\n    return service.getUnderlyingTableDataAsync(\n      this.visualId,\n      logicalTableId,\n      !!options.ignoreAliases,\n      !!options.ignoreSelection,\n      !!options.includeAllColumns,\n      options.columnsToIncludeById || [],\n      options.maxRows || 0,\n      options.includeDataValuesOption || IncludeDataValuesOption.AllValues,\n      options.applyWorksheetFormatting ?? false,\n    );\n  }\n\n  public getUnderlyingTableDataReaderAsync(\n    logicalTableId: string,\n    pageRowCount?: number,\n    options?: Contract.GetUnderlyingDataOptions,\n  ): Promise<Contract.DataTableReader> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<GetDataService>(ServiceNames.GetData);\n    options = options || {};\n    return service.getUnderlyingTableDataReaderAsync(\n      this.visualId,\n      logicalTableId,\n      pageRowCount || this.getMaxPageRowLimit(),\n      !!options.ignoreAliases,\n      !!options.ignoreSelection,\n      !!options.includeAllColumns,\n      options.columnsToIncludeById || [],\n      options.includeDataValuesOption || IncludeDataValuesOption.AllValues,\n      options.applyWorksheetFormatting ?? false,\n    );\n  }\n\n  public clearSelectedMarksAsync(): Promise<void> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<SelectionService>(ServiceNames.Selection);\n    return service.clearSelectedMarksAsync(this.visualId);\n  }\n\n  public selectMarksByValueAsync(selections: Array<Contract.SelectionCriteria>, selectionUpdateType: SelectionUpdateType): Promise<void> {\n    ErrorHelpers.verifyParameter(selections, 'fieldName');\n    ErrorHelpers.verifyEnumValue<SelectionUpdateType>(selectionUpdateType, SelectionUpdateType, 'SelectionUpdateType');\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<SelectionService>(ServiceNames.Selection);\n    return service.selectMarksByValueAsync(this.visualId, selections, selectionUpdateType);\n  }\n\n  public selectMarksByIdAsync(selections: Array<Contract.MarkInfo>, selectionUpdateType: SelectionUpdateType): Promise<void> {\n    ErrorHelpers.verifyParameter(selections, 'fieldName');\n    ErrorHelpers.verifyEnumValue<SelectionUpdateType>(selectionUpdateType, SelectionUpdateType, 'SelectionUpdateType');\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<SelectionService>(ServiceNames.Selection);\n    return service.selectMarksByIdAsync(this.visualId, selections, selectionUpdateType);\n  }\n\n  public annotateMarkAsync(mark: Contract.MarkInfo, annotationText: string): Promise<void> {\n    ErrorHelpers.verifyParameter(mark, 'mark');\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<AnnotationService>(ServiceNames.Annotation);\n    return service.annotateMarkAsync(this.visualId, mark, annotationText);\n  }\n\n  public getAnnotationsAsync(): Promise<Array<Contract.Annotation>> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<AnnotationService>(ServiceNames.Annotation);\n    return service.getAnnotationsAsync(this.visualId);\n  }\n\n  public removeAnnotationAsync(annotation: Contract.Annotation) {\n    ErrorHelpers.verifyParameter(annotation, 'annotation');\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<AnnotationService>(ServiceNames.Annotation);\n    return service.removeAnnotationAsync(this.visualId, annotation);\n  }\n\n  public appendContextMenuAsync(targetMenu: ApiMenuType, config: ContextMenuOptions): Promise<string> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<ExternalContextMenuService>(ServiceNames.ExternalContextMenu);\n    return service.appendContextMenuAsync(this.visualId.worksheet, targetMenu, config);\n  }\n\n  public removeContextMenuAsync(targetMenu: ApiMenuType, menuItemId: string): Promise<void> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<ExternalContextMenuService>(ServiceNames.ExternalContextMenu);\n    return service.removeContextMenuAsync(this.visualId.worksheet, targetMenu, menuItemId);\n  }\n\n  public executeContextMenuAsync(targetMenu: ApiMenuType, menuItemId: string): Promise<void> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<ExternalContextMenuService>(ServiceNames.ExternalContextMenu);\n    return service.executeContextMenuAsync(this.visualId.worksheet, targetMenu, menuItemId);\n  }\n\n  public renameContextMenuAsync(targetMenu: ApiMenuType, menuHeader: string, menuDescription: string): Promise<void> {\n    this.verifyActiveSheet();\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<ExternalContextMenuService>(ServiceNames.ExternalContextMenu);\n    return service.renameContextMenuAsync(this.visualId.worksheet, targetMenu, menuHeader, menuDescription);\n  }\n\n  public hoverTupleAsync(hoveredTuple?: number, tooltip?: TooltipContext | null, allowHoverActions?: boolean): Promise<void> {\n    if (this.isInsideDashboardExtension()) {\n      return Promise.reject(\n        new TableauError(Contract.SharedErrorCodes.ImplementationError, `hoverTupleAsync is not supported in dashboard extensions`),\n      );\n    }\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<SelectionService>(ServiceNames.Selection);\n    return service.hoverTupleAsync(this.visualId, hoveredTuple, tooltip, allowHoverActions);\n  }\n\n  public selectTuplesAsync(selectedTuples: Array<number>, selectOption: Contract.SelectOptions, tooltip?: TooltipContext): Promise<void> {\n    if (this.isInsideDashboardExtension()) {\n      return Promise.reject(\n        new TableauError(Contract.SharedErrorCodes.ImplementationError, `selectTuplesAsync is not supported in dashboard extensions`),\n      );\n    }\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<SelectionService>(ServiceNames.Selection);\n    return service.selectTuplesAsync(this.visualId, selectedTuples, selectOption, tooltip);\n  }\n\n  public getTooltipTextAsync(tupleId: number): Promise<String> {\n    if (this.isInsideDashboardExtension()) {\n      return Promise.reject(\n        new TableauError(Contract.SharedErrorCodes.ImplementationError, `getTooltipTextAsync is not supported in dashboard extensions`),\n      );\n    }\n    const service = ApiServiceRegistry.get(this._registryId).getService<AccessibilityService>(ServiceNames.Accessibility);\n    return service.getTooltipTextAsync(this.visualId, tupleId);\n  }\n\n  public leaveMarkNavigationAsync(): Promise<void> {\n    if (this.isInsideDashboardExtension()) {\n      return Promise.reject(\n        new TableauError(\n          Contract.SharedErrorCodes.ImplementationError,\n          `leaveMarkNavigationAsync is not supported in dashboard extensions`,\n        ),\n      );\n    }\n    const service = ApiServiceRegistry.get(this._registryId).getService<AccessibilityService>(ServiceNames.Accessibility);\n    return service.leaveMarkNavigationAsync(this.visualId);\n  }\n\n  public editAliasesDialogAsync(fieldName: string): Promise<void> {\n    const service = ApiServiceRegistry.get(this._registryId).getService<VisualModelService>(ServiceNames.VisualModel);\n    return service.editAliasesDialogAsync(fieldName);\n  }\n\n  private createDataSourceFromInfo(dataSourceInfo: DataSourceInfo): Contract.DataSource {\n    const dataSourceImpl = new DataSourceImpl(dataSourceInfo, this._registryId);\n    const dataSource = new DataSource(dataSourceImpl);\n    dataSourceImpl.initializeWithPublicInterfaces(dataSource);\n    return dataSource;\n  }\n\n  private verifyActiveSheet() {\n    const isRootAndActiveWorksheet = this.active;\n    const isInsideActiveDashboard = this.isInsideActiveDashboard();\n    const isInsideActiveStoryPoint = this.isInsideActiveStoryPoint();\n\n    if (!isRootAndActiveWorksheet && !isInsideActiveDashboard && !isInsideActiveStoryPoint) {\n      throw new TableauError(SharedErrorCodes.NotActiveSheet, 'Operation not allowed on non-active sheet');\n    }\n  }\n\n  private isInsideActiveStoryPoint() {\n    return this._parentStoryPointImpl && this._parentStoryPointImpl.active;\n  }\n\n  private isInsideActiveDashboard() {\n    return this._parentDashboardImpl && this._parentDashboardImpl.active;\n  }\n\n  private isInsideDashboardExtension() {\n    return this._parentDashboardImpl !== null;\n  }\n}\n"]}