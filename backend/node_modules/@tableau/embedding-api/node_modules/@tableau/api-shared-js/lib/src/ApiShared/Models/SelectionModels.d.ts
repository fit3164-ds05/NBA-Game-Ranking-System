import { TooltipContext } from '@tableau/api-external-contract-js';
import { HoverTupleInteraction, SelectOptions, SelectTuplesInteraction, VisualId } from '@tableau/api-internal-contract-js';
/**
 * Selection Model.
 */
export declare class SelectionModel {
    qualifiedFieldCaption: string;
}
/**
 * Value based selection model. Meant for hierarchical, range and categorical selections.
 */
export declare class ValueSelectionModel extends SelectionModel {
    selectValues: Array<string>;
}
/**
 * Hierarchical value selection model
 */
export declare class HierarchicalSelectionModel extends ValueSelectionModel {
}
/**
 * Range based value selection model
 */
export declare class RangeSelectionModel extends SelectionModel {
    minValue: string;
    maxValue: string;
    included: string;
}
/**
 * Dimension value selection model
 */
export declare class DimensionSelectionModel extends ValueSelectionModel {
}
/**
 * Tuple based selection model
 */
export declare class TupleSelectionModel {
    selectionType: string;
    objectIds: Array<string>;
}
/**
 * Container class to populate all the selection models when parsing input
 */
export declare class SelectionModelsContainer {
    hierModelArr: Array<HierarchicalSelectionModel>;
    dimModelArr: Array<DimensionSelectionModel>;
    quantModelArr: Array<RangeSelectionModel>;
    selection: TupleSelectionModel;
}
export declare class SelectTuplesInteractionModel implements SelectTuplesInteraction {
    visualIdPresModel: VisualId;
    tupleIds: Array<number>;
    selectOptions: SelectOptions;
    tooltipContext?: TooltipContext | undefined;
    constructor(visualIdPresModel: VisualId, tupleIds: Array<number>, selectOptions: SelectOptions, tooltipContext?: TooltipContext | undefined);
}
export declare class HoverTupleInteractionModel implements HoverTupleInteraction {
    visualIdPresModel: VisualId;
    tupleId: number;
    tooltipContext?: TooltipContext | null | undefined;
    allowHoverActions?: boolean | undefined;
    constructor(visualIdPresModel: VisualId, tupleId: number, tooltipContext?: TooltipContext | null | undefined, allowHoverActions?: boolean | undefined);
}
//# sourceMappingURL=SelectionModels.d.ts.map