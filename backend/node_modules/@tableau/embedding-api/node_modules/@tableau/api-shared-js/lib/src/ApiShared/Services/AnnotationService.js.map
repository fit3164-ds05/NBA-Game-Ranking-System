{"version":3,"file":"AnnotationService.js","sourceRoot":"","sources":["../../../../src/ApiShared/Services/AnnotationService.ts"],"names":[],"mappings":"","sourcesContent":["import { Annotation, MarkInfo } from '@tableau/api-external-contract-js';\nimport { VisualId } from '@tableau/api-internal-contract-js';\nimport { ApiService } from './ServiceRegistry';\n\n/**\n * Service for implementing the logic for various Annotation calls\n *\n * @interface AnnotationService\n * @extends {ApiService}\n */\nexport interface AnnotationService extends ApiService {\n  /**\n   * Annotate mark in the current worksheet.\n   * Supports selection by tupleid.\n   *\n   * @param {VisualId} visualId - The visual id of the worksheet to annotate.\n   * @param {MarkInfo} mark - The mark to annotate.\n   * @param {string} annotationText - The text to annotate the mark with.\n   * @return This function does not return anything.\n   */\n  annotateMarkAsync(visualId: VisualId, mark: MarkInfo, annotationText: string): Promise<void>;\n\n  /**\n   * Gets the annotations for the current worksheet.\n   *\n   * @param {VisualId} visualId - The visual id\n   * @returns {Promise<Array<Annotation>} - Array of annotations\n   */\n  getAnnotationsAsync(visualId: VisualId): Promise<Array<Annotation>>;\n\n  /**\n   * Remove an annotation from the current worksheet.\n   * Supports selection by annotationId.\n   *\n   * @param {VisualId}    visualId - The visual id of the worksheet to remove annotation from.\n   * @param {Annotation}  annotation - The annotation to remove.\n   * @returns This function does not return anything.\n   */\n  removeAnnotationAsync(visualId: VisualId, annotation: Annotation): Promise<void>;\n}\n"]}