{"version":3,"file":"SingleEventManager.js","sourceRoot":"","sources":["../../../src/ApiShared/SingleEventManager.ts"],"names":[],"mappings":"","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport { TableauEventType } from '@tableau/api-external-contract-js';\n\n/**\n * Manages registering and unregistering event handlers for a specific type of Tableau event.\n */\nexport interface SingleEventManager {\n  /**\n   * The type of event this manager is in charge of\n   */\n  readonly eventType: TableauEventType;\n\n  /**\n   * Adds a new event listener to this manager.\n   *\n   * @param {(eventObj: TableauEvent) => void} handler The handler to add\n   * @returns {TableauEventUnregisterFn} A function which can be called to unregister this handler\n   */\n  addEventListener(handler: (eventObj: Contract.TableauEvent) => void): Contract.TableauEventUnregisterFn;\n\n  /**\n   * Removes all event handler which match the provided handler\n   *\n   * @param {(eventObj: TableauEvent) => void} handler The handler to remove\n   * @returns {boolean} Whether or not any instances were removed\n   */\n  removeEventListener(handler: (eventObj: Contract.TableauEvent) => void): boolean;\n\n  /**\n   * Trigger an event and notifies all handlers which have been registered via AddEventListener\n   *\n   * @param {() => TableauEvent} eventGenerator A function which generates the Tableau event.\n   */\n  triggerEvent(eventGenerator: () => Contract.TableauEvent): void;\n}\n"]}