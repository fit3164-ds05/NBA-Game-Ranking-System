{"version":3,"file":"ParameterImpl.js","sourceRoot":"","sources":["../../../../src/ApiShared/Impl/ParameterImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport { DataType, ParameterValueType, PeriodType } from '@tableau/api-external-contract-js';\nimport { ParameterInfo } from '@tableau/api-internal-contract-js';\nimport { InternalToExternalEnumMappings } from '../EnumMappings/InternalToExternalEnumMappings';\nimport { DataValue } from '../Models/GetDataModels';\nimport { ParametersService } from '../Services/ParametersService';\nimport { ApiServiceRegistry, ServiceNames } from '../Services/ServiceRegistry';\nimport { DataValueFactory } from '../Utils/DataValueFactory';\nimport { ErrorHelpers } from '../Utils/ErrorHelpers';\nimport { Param } from '../Utils/Param';\n\nexport class ParameterImpl {\n  private _allowableValues: Contract.ParameterDomainRestriction;\n  private _globalFieldName: string;\n  private _parameterInfo: ParameterInfo;\n\n  public constructor(parameterInfo: ParameterInfo, private _registryId: number) {\n    this.setParameterInfo(parameterInfo);\n  }\n\n  public get name(): string {\n    return this._parameterInfo.name;\n  }\n\n  public get currentValue(): DataValue {\n    return DataValueFactory.MakeParameterDataValue(this._parameterInfo.currentValue, this._parameterInfo.dataType);\n  }\n\n  public get dataType(): DataType {\n    return InternalToExternalEnumMappings.dataType.convert(this._parameterInfo.dataType);\n  }\n\n  public get id(): string {\n    return this._globalFieldName;\n  }\n\n  public get allowableValues(): Contract.ParameterDomainRestriction {\n    return this._allowableValues;\n  }\n\n  public changeValueAsync(newValue: string | number | boolean | Date): Promise<DataValue> {\n    ErrorHelpers.verifyParameter(newValue, 'newValue');\n\n    const coercedValue = Param.serializeParameterValue(newValue);\n    const parametersService = ApiServiceRegistry.get(this._registryId).getService<ParametersService>(ServiceNames.Parameters);\n    return parametersService.changeParameterValueAsync(this._globalFieldName, coercedValue).then((parameterInfo) => {\n      this.setParameterInfo(parameterInfo);\n      return this.currentValue;\n    });\n  }\n\n  private setParameterInfo(parameterInfo: ParameterInfo): void {\n    this._parameterInfo = parameterInfo;\n    this._globalFieldName = parameterInfo.fieldName;\n\n    const type = InternalToExternalEnumMappings.allowableValues.convert(parameterInfo.allowableValuesType);\n    let listValues: Array<DataValue> | undefined;\n    let minValue: DataValue | undefined;\n    let maxValue: DataValue | undefined;\n    let stepSize: number | undefined;\n    let dateStepPeriod: PeriodType | undefined;\n\n    if (type === ParameterValueType.List) {\n      const values = parameterInfo.allowableValues || [];\n      listValues = values.map((val) => DataValueFactory.MakeParameterDataValue(val, parameterInfo.dataType));\n    } else if (type === ParameterValueType.Range) {\n      minValue = parameterInfo.minValue && DataValueFactory.MakeParameterDataValue(parameterInfo.minValue, parameterInfo.dataType);\n      maxValue = parameterInfo.maxValue && DataValueFactory.MakeParameterDataValue(parameterInfo.maxValue, parameterInfo.dataType);\n      stepSize = parameterInfo.stepSize;\n      dateStepPeriod = parameterInfo.dateStepPeriod && InternalToExternalEnumMappings.dateStepPeriod.convert(parameterInfo.dateStepPeriod);\n    }\n\n    this._allowableValues = {\n      type: type,\n      allowableValues: listValues,\n      minValue: minValue,\n      maxValue: maxValue,\n      stepSize: stepSize,\n      dateStepPeriod: dateStepPeriod,\n    };\n  }\n}\n"]}