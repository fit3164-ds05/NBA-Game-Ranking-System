import * as Contract from '@tableau/api-external-contract-js';
import { ConnectionDescriptionSummary, DataSchema, InternalApiDispatcher, LogicalTableInfo, TableInfo, VisualId } from '@tableau/api-internal-contract-js';
import { DataSourceService } from '../DataSourceService';
import { ServiceImplBase } from './ServiceImplBase';
export declare class DataSourceServiceImpl extends ServiceImplBase implements DataSourceService {
    constructor(dispatcher: InternalApiDispatcher, registryId: number);
    get serviceName(): string;
    refreshAsync(dataSourceId?: string): Promise<void>;
    getActiveTablesAsync(dataSourceId: string): Promise<Array<TableInfo>>;
    getDataSourcesAsync(visualId: VisualId): Promise<DataSchema>;
    getAllDataSourcesAsync(): Promise<DataSchema>;
    getConnectionSummariesAsync(dataSourceId: string): Promise<ConnectionDescriptionSummary[]>;
    getFieldAsync(globalfieldName: string): Promise<Contract.Field>;
    getLogicalTablesAsync(dataSourceId: string): Promise<Array<LogicalTableInfo>>;
    getUnderlyingTablesAsync(visualId: VisualId): Promise<Array<LogicalTableInfo>>;
    private convertField;
    private convertDataSource;
}
//# sourceMappingURL=DataSourceServiceImpl.d.ts.map