{"version":3,"file":"SheetImpl.js","sourceRoot":"","sources":["../../../../src/ApiShared/Impl/SheetImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport { SheetPath } from '@tableau/api-internal-contract-js';\nimport { ClientInfoService } from '../Services/ClientInfoService';\nimport { ParametersService } from '../Services/ParametersService';\nimport { ApiServiceRegistry, ServiceNames } from '../Services/ServiceRegistry';\nimport { SizeService } from '../Services/SizeService';\nimport { TableauError } from '../TableauError';\nimport { ErrorHelpers } from '../Utils/ErrorHelpers';\nimport { Param } from '../Utils/Param';\nimport { SheetUtils } from '../Utils/SheetUtils';\nimport { ParameterImpl } from './ParameterImpl';\nimport { SheetInfoImpl } from './SheetInfoImpl';\n\ninterface PartialSheetSize {\n  /**\n   * Contains an enumeration value of one of the following: AUTOMATIC, EXACTLY, RANGE, ATLEAST, and ATMOST.\n   */\n  readonly behavior: Contract.SheetSizeBehavior;\n\n  /**\n   *  This is only defined when behavior is EXACTLY, RANGE, or ATLEAST.\n   */\n  readonly minSize?: Partial<Contract.Size>;\n\n  /**\n   *  This is only defined when behavior is EXACTLY, RANGE or ATMOST.\n   */\n  readonly maxSize?: Partial<Contract.Size>;\n}\n\nexport class SheetImpl {\n  public constructor(protected _sheetInfoImpl: SheetInfoImpl, protected _registryId: number) {}\n\n  public get name(): string {\n    return this._sheetInfoImpl.name;\n  }\n\n  public get sheetType(): Contract.SheetType {\n    return this._sheetInfoImpl.sheetType;\n  }\n\n  public get sheetPath(): SheetPath {\n    return this._sheetInfoImpl.sheetPath;\n  }\n\n  public get size(): Contract.Size | Contract.SheetSize {\n    return this._sheetInfoImpl.sheetSize;\n  }\n\n  public get hidden(): boolean {\n    if (this._sheetInfoImpl.isHidden !== undefined) {\n      return this._sheetInfoImpl.isHidden;\n    }\n    throw new TableauError(Contract.EmbeddingErrorCodes.ImplementationError, `isHidden not implemented`);\n  }\n\n  public get active(): boolean {\n    if (this._sheetInfoImpl.isActive !== undefined) {\n      return this._sheetInfoImpl.isActive;\n    }\n    throw new TableauError(Contract.EmbeddingErrorCodes.ImplementationError, `active not implemented`);\n  }\n\n  public set active(active: boolean) {\n    if (this._sheetInfoImpl.isActive !== undefined) {\n      this._sheetInfoImpl.active = active;\n    }\n  }\n\n  public get index(): number {\n    if (this._sheetInfoImpl.index !== undefined) {\n      return this._sheetInfoImpl.index;\n    }\n    throw new TableauError(Contract.EmbeddingErrorCodes.ImplementationError, `index not implemented`);\n  }\n\n  public get url(): string {\n    if (this._sheetInfoImpl.url !== undefined) {\n      return this._sheetInfoImpl.url;\n    }\n    throw new TableauError(Contract.EmbeddingErrorCodes.ImplementationError, `url not implemented`);\n  }\n\n  private getSheetSize(): Contract.SheetSize {\n    if (!SheetUtils.isValidSheetSize(this.size)) {\n      throw new TableauError(Contract.EmbeddingErrorCodes.InternalError, 'size is not of type SheetSize');\n    }\n\n    return this.size;\n  }\n\n  public findParameterAsync(parameterName: string): Promise<ParameterImpl | undefined> {\n    ErrorHelpers.verifyParameter(parameterName, 'parameterName');\n\n    const service = ApiServiceRegistry.get(this._registryId).getService<ParametersService>(ServiceNames.Parameters);\n    return service.findParameterByNameAsync(parameterName);\n  }\n\n  public getParametersAsync(): Promise<Array<ParameterImpl>> {\n    const service = ApiServiceRegistry.get(this._registryId).getService<ParametersService>(ServiceNames.Parameters);\n    return service.getParametersForSheetAsync(this.sheetPath);\n  }\n\n  public changeSizeAsync(newSize: Contract.SheetSize): Promise<Contract.SheetSize> {\n    const invalidSizeError = new TableauError(Contract.EmbeddingErrorCodes.InvalidSize, 'Invalid sheet size parameter');\n    if (!newSize || !newSize.behavior) {\n      throw invalidSizeError;\n    }\n\n    const partialSheetSize = this.normalizeSheetSize(newSize);\n\n    const isAutomatic = partialSheetSize.behavior === Contract.SheetSizeBehavior.Automatic;\n    if (!isAutomatic && !partialSheetSize.minSize && !partialSheetSize.maxSize) {\n      throw invalidSizeError;\n    }\n\n    if (!isAutomatic && this.sheetType === Contract.SheetType.Worksheet) {\n      throw new TableauError(\n        Contract.EmbeddingErrorCodes.InvalidSizeBehaviorOnWorksheet,\n        'Only SheetSizeBehavior.Automatic is allowed on Worksheets',\n      );\n    }\n\n    if (isAutomatic && this.getSheetSize().behavior === partialSheetSize.behavior) {\n      return Promise.resolve(newSize);\n    }\n\n    const processedNewSize = this.processNewSize(partialSheetSize);\n\n    const sizeService = ApiServiceRegistry.get(this._registryId).getService<SizeService>(ServiceNames.Size);\n    return sizeService.changeSizeAsync(this.name, processedNewSize).then(() => {\n      const clientInfoService = ApiServiceRegistry.get(this._registryId).getService<ClientInfoService>(ServiceNames.ClientInfo);\n\n      return clientInfoService.getClientInfoAsync().then((bootstrapInfo) => {\n        const sheet = bootstrapInfo.publishedSheets.find((s) => s.name === this.name);\n        if (!sheet) {\n          throw new TableauError(Contract.SharedErrorCodes.InternalError, `Can't find sheet with name ${this.name}`);\n        }\n\n        const sheetSize = SheetUtils.getSheetSizeFromSizeConstraints(sheet.sizeConstraint);\n        this._sheetInfoImpl.sheetSize = sheetSize;\n\n        return sheetSize;\n      });\n    });\n  }\n\n  private normalizeSheetSize(newSize: Contract.SheetSize): PartialSheetSize {\n    const { behavior } = newSize;\n\n    ErrorHelpers.verifyEnumValue<Contract.SheetSizeBehavior>(behavior, Contract.SheetSizeBehavior, 'SheetSizeBehavior');\n\n    const minSize = SheetImpl.parseDimensions(newSize.minSize);\n    const maxSize = SheetImpl.parseDimensions(newSize.maxSize);\n\n    return { behavior, minSize, maxSize };\n  }\n\n  private processNewSize(newSize: PartialSheetSize): Contract.SheetSize {\n    const { behavior, minSize: minSizeMaybe, maxSize: maxSizeMaybe } = newSize;\n\n    const hasMinWidth = !Param.isNullOrUndefined(minSizeMaybe?.width);\n    const hasMinHeight = !Param.isNullOrUndefined(minSizeMaybe?.height);\n    const hasMaxWidth = !Param.isNullOrUndefined(maxSizeMaybe?.width);\n    const hasMaxHeight = !Param.isNullOrUndefined(maxSizeMaybe?.height);\n    const hasValidMinSize = hasMinWidth && hasMinHeight;\n    const hasValidMaxSize = hasMaxWidth && hasMaxHeight;\n\n    switch (behavior) {\n      case Contract.SheetSizeBehavior.Automatic: {\n        return { behavior };\n      }\n\n      case Contract.SheetSizeBehavior.AtMost: {\n        if (!maxSizeMaybe || !hasValidMaxSize) {\n          throw new TableauError(Contract.EmbeddingErrorCodes.MissingMaxSize, 'Missing maxSize for SheetSizeBehavior.AtMost');\n        }\n\n        const maxSize = { width: maxSizeMaybe.width!, height: maxSizeMaybe.height! };\n        if (maxSize.width < 0 || maxSize.height < 0) {\n          throw new TableauError(Contract.EmbeddingErrorCodes.InvalidSize, 'Size value cannot be less than zero');\n        }\n\n        return { behavior, maxSize };\n      }\n\n      case Contract.SheetSizeBehavior.AtLeast: {\n        if (!minSizeMaybe || !hasValidMinSize) {\n          throw new TableauError(Contract.EmbeddingErrorCodes.MissingMinSize, 'Missing minSize for SheetSizeBehavior.AtLeast');\n        }\n\n        const minSize = { width: minSizeMaybe.width!, height: minSizeMaybe.height! };\n        if (minSize.width < 0 || minSize.height < 0) {\n          throw new TableauError(Contract.EmbeddingErrorCodes.InvalidSize, 'Size value cannot be less than zero');\n        }\n\n        return { behavior, minSize };\n      }\n\n      case Contract.SheetSizeBehavior.Range: {\n        if (!minSizeMaybe || !maxSizeMaybe || !hasValidMinSize || !hasValidMaxSize) {\n          throw new TableauError(Contract.EmbeddingErrorCodes.MissingMinMaxSize, 'Missing minSize or maxSize for SheetSizeBehavior.Range');\n        }\n\n        const minSize = { width: minSizeMaybe.width!, height: minSizeMaybe.height! };\n        const maxSize = { width: maxSizeMaybe.width!, height: maxSizeMaybe.height! };\n\n        if (\n          minSize.width < 0 ||\n          minSize.height < 0 ||\n          maxSize.width < 0 ||\n          maxSize.height < 0 ||\n          minSize.width > maxSize.width ||\n          minSize.height > maxSize.height\n        ) {\n          throw new TableauError(Contract.EmbeddingErrorCodes.InvalidSize, 'Missing minSize or maxSize for SheetSizeBehavior.Range');\n        }\n\n        return { behavior, minSize, maxSize };\n      }\n\n      case Contract.SheetSizeBehavior.Exactly: {\n        if (minSizeMaybe && maxSizeMaybe) {\n          if (hasValidMinSize && hasValidMaxSize) {\n            const minSize = { width: minSizeMaybe.width!, height: minSizeMaybe.height! };\n            const maxSize = { width: maxSizeMaybe.width!, height: maxSizeMaybe.height! };\n\n            if (minSize.width !== maxSize.width || minSize.height !== maxSize.height) {\n              throw new TableauError(Contract.EmbeddingErrorCodes.InvalidSize, 'Conflicting size values for SheetSizeBehavior.Exactly');\n            }\n\n            return { behavior, minSize, maxSize };\n          }\n\n          if (hasValidMinSize) {\n            const minSize = { width: minSizeMaybe.width!, height: minSizeMaybe.height! };\n            return { behavior, minSize, maxSize: minSize };\n          }\n\n          if (hasValidMaxSize) {\n            const maxSize = { width: maxSizeMaybe.width!, height: maxSizeMaybe.height! };\n            return { behavior, minSize: maxSize, maxSize };\n          }\n        }\n\n        throw new TableauError(Contract.EmbeddingErrorCodes.InvalidSize, 'Invalid sheet size parameter');\n      }\n\n      default: {\n        throw new TableauError(Contract.SharedErrorCodes.InternalError, `Unsupported sheet size behavior: ${behavior}`);\n      }\n    }\n  }\n\n  private static parseDimensions = (size: Contract.Size | undefined): Partial<Contract.Size> => {\n    const empty = { width: undefined, height: undefined };\n\n    if (!size) {\n      return empty;\n    }\n\n    const { success: widthParsed, parsed: parsedWidth } = Param.tryParseNumber(size.width);\n    const { success: heightParsed, parsed: parsedHeight } = Param.tryParseNumber(size.height);\n\n    if (widthParsed && heightParsed) {\n      return { width: parsedWidth!, height: parsedHeight! };\n    }\n\n    if (widthParsed) {\n      return { width: parsedWidth! };\n    }\n\n    if (heightParsed) {\n      return { height: parsedHeight! };\n    }\n\n    return empty;\n  };\n}\n"]}