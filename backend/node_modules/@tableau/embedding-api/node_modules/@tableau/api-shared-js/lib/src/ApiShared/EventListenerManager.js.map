{"version":3,"file":"EventListenerManager.js","sourceRoot":"","sources":["../../../src/ApiShared/EventListenerManager.ts"],"names":[],"mappings":";;AACA,8EAAiF;AAEjF,+CAA8C;AAE9C;;;GAGG;AACH;IAGE;QACE,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;IACnC,CAAC;IAEM,+CAAgB,GAAvB,UAAwB,SAA2B,EAAE,OAAuC;QAC1F,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;YAC1D,MAAM,IAAI,2BAAY,CAAC,qCAAU,CAAC,oBAAoB,EAAE,+CAA6C,SAAW,CAAC,CAAC;SACnH;QAED,OAAO,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAC1E,CAAC;IAEM,kDAAmB,GAA1B,UAA2B,SAA2B,EAAE,OAAuC;QAC7F,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;YAC1D,MAAM,IAAI,2BAAY,CAAC,qCAAU,CAAC,oBAAoB,EAAE,kDAAgD,SAAW,CAAC,CAAC;SACtH;QAED,OAAO,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;IAC7E,CAAC;IAES,8CAAe,GAAzB,UAA0B,YAAgC;QACxD,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC;IACrE,CAAC;IACH,2BAAC;AAAD,CAAC,AA1BD,IA0BC;AA1BY,oDAAoB","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport { ErrorCodes, TableauEventType } from '@tableau/api-external-contract-js';\nimport { SingleEventManager } from './SingleEventManager';\nimport { TableauError } from './TableauError';\n\n/**\n * Class designed to register and unregister handlers from a user. Only those events\n * which are added via AddNewEventType will be supported by this instance\n */\nexport class EventListenerManager implements Contract.EventListenerManager {\n  private _eventListenerManagers: { [tableauEventType: string]: SingleEventManager };\n\n  public constructor() {\n    this._eventListenerManagers = {};\n  }\n\n  public addEventListener(eventType: TableauEventType, handler: Contract.TableauEventHandlerFn): Contract.TableauEventUnregisterFn {\n    if (!this._eventListenerManagers.hasOwnProperty(eventType)) {\n      throw new TableauError(ErrorCodes.UnsupportedEventName, `Cannot add event, unsupported event type: ${eventType}`);\n    }\n\n    return this._eventListenerManagers[eventType].addEventListener(handler);\n  }\n\n  public removeEventListener(eventType: TableauEventType, handler: Contract.TableauEventHandlerFn): boolean {\n    if (!this._eventListenerManagers.hasOwnProperty(eventType)) {\n      throw new TableauError(ErrorCodes.UnsupportedEventName, `Cannot remove event, unsupported event type: ${eventType}`);\n    }\n\n    return this._eventListenerManagers[eventType].removeEventListener(handler);\n  }\n\n  protected addNewEventType(eventManager: SingleEventManager): void {\n    this._eventListenerManagers[eventManager.eventType] = eventManager;\n  }\n}\n"]}