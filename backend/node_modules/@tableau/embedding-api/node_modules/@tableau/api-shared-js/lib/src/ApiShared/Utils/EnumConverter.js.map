{"version":3,"file":"EnumConverter.js","sourceRoot":"","sources":["../../../../src/ApiShared/Utils/EnumConverter.ts"],"names":[],"mappings":";;AAAA,8EAA+D;AAC/D,gDAA+C;AAE/C;;;;;;;;;GASG;AACH;IACE,uBAA2B,SAAkD,EAAU,WAA8B;QAA1F,cAAS,GAAT,SAAS,CAAyC;QAAU,gBAAW,GAAX,WAAW,CAAmB;IAAG,CAAC;IAElH,+BAAO,GAAd,UAAe,OAAoB,EAAE,cAA6C;QAA7C,+BAAA,EAAA,iBAA8B,WAAW,CAAC,GAAG;QAChF,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;YAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,OAAiB,CAAC,CAAC;SAC1C;QAED,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,IAAI,cAAc,KAAK,WAAW,CAAC,GAAG,EAAE;YACxE,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;QAED,MAAM,IAAI,2BAAY,CAAC,qCAAU,CAAC,aAAa,EAAE,iCAA+B,OAAS,CAAC,CAAC;IAC7F,CAAC;IACH,oBAAC;AAAD,CAAC,AAdD,IAcC;AAdY,sCAAa;AAgB1B,IAAY,WAGX;AAHD,WAAY,WAAW;IACrB,0BAAW,CAAA;IACX,wBAAS,CAAA;AACX,CAAC,EAHW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAGtB","sourcesContent":["import { ErrorCodes } from '@tableau/api-external-contract-js';\nimport { TableauError } from '../TableauError';\n\n/**\n * This class converts from a source enum value to destination enum\n * value given a mapping from source to destination when constructed.\n *\n * Note: This exact same class is defined in api-core.  Given its small\n * nature, it is not worth having in a separate project to share this between\n * api-core and api-shared.  If more utility functionality is added that is used by api-core\n * and api-shared but has no other dependecies, a utiltity project might be merited,\n * and this class could be moved.\n */\nexport class EnumConverter<TSourceType extends string, TDestinationType> {\n  public constructor(private _mappings: { [enumVal: string]: TDestinationType }, private _defaultVal?: TDestinationType) {}\n\n  public convert(enumVal: TSourceType, throwIfMissing: ShouldThrow = ShouldThrow.Yes): TDestinationType {\n    if (this._mappings.hasOwnProperty(enumVal)) {\n      return this._mappings[enumVal as string];\n    }\n\n    if (this._defaultVal !== undefined && throwIfMissing !== ShouldThrow.Yes) {\n      return this._defaultVal;\n    }\n\n    throw new TableauError(ErrorCodes.InternalError, `Enum Mapping not found for: ${enumVal}`);\n  }\n}\n\nexport enum ShouldThrow {\n  Yes = 'yes',\n  No = 'no',\n}\n"]}