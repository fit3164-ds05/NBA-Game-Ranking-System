export declare class Param {
    /**
     * serializes the date into the format that the server expects.
     * @param date the date to serialize
     */
    static serializeDateForPlatform(date: Date): string;
    static serializeBooleanForPlatform(bool: boolean): string;
    static serializeNumberForPlatform(num: number): string;
    /**
     * Verifies the input is a number
     */
    static isTypeNumber(input: any): boolean;
    /**
     * Verifies the input is a Date
     */
    static isTypeDate(input: any): boolean;
    static isTypeString(input: any): boolean;
    static isTypeBool(input: any): boolean;
    /**
     * Determines if the input is null or undefined
     */
    static isNullOrUndefined(input: any): boolean;
    static serializeParameterValue(value: any): string;
    /**
     * Verifies that the parameter is already a Map, or converts an object to a Map.
     * If the parameter is an object, we convert it to a Map using Object.entries.
     * @throws if the parameter is not an object or Map
     */
    static convertParameterToMap(param: object, paramName: string): Map<any, any>;
    static tryParseNumber(value: any): {
        parsed?: number;
        success: boolean;
    };
}
//# sourceMappingURL=Param.d.ts.map