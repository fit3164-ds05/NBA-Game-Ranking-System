import { DateRangeType as ExternalDateRangeType, DialogStyle as ExternalDialogStyle, FilterDomainType as ExternalDomainType, FilterNullOption as ExternalNullOption, FilterUpdateType as ExternalFilterUpdateType, IncludeDataValuesOption, PeriodType, ReplaySpeedType, SheetType as ExternalSheetType } from '@tableau/api-external-contract-js';
import { ApiShowDataTableFormat, DateRangeType as InternalDateRangeType, DateStepPeriod, DialogStyle as InternalDialogStyle, FilterDomainType as InternalDomainType, FilterNullOption as InternalNullOption, FilterUpdateType as InternalFilterUpdateType, SheetType as InternalSheetType } from '@tableau/api-internal-contract-js';
import { EnumConverter } from '../Utils/EnumConverter';
/**
 * Maps enums used by the external-api-contract to the enums used
 * in the internal-api-contract, which developers code against.
 */
export declare class ExternalToInternalEnumMappings {
    static filterDomainType: EnumConverter<ExternalDomainType, InternalDomainType>;
    static nullOptions: EnumConverter<ExternalNullOption, InternalNullOption>;
    static filterUpdateType: EnumConverter<ExternalFilterUpdateType, InternalFilterUpdateType>;
    static setVisibilityType: EnumConverter<import("@tableau/api-external-contract-js/lib/src/ExternalContract/Shared/Namespaces/Tableau").DashboardObjectVisibilityType, boolean>;
    static setReplaySpeedType: EnumConverter<ReplaySpeedType, number>;
    static sheetType: EnumConverter<ExternalSheetType, InternalSheetType>;
    static showDataTableFormatType: EnumConverter<IncludeDataValuesOption, ApiShowDataTableFormat>;
    static periodType: EnumConverter<PeriodType, DateStepPeriod>;
    static dateRangeType: EnumConverter<ExternalDateRangeType, InternalDateRangeType>;
    static dialogStyles: EnumConverter<ExternalDialogStyle, InternalDialogStyle>;
}
//# sourceMappingURL=ExternalToInternalEnumMappings.d.ts.map