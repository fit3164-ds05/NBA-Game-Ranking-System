import { ExecuteParameters, ExecuteResponse, InternalApiDispatcher, Messenger, NotificationHandler, VerbId } from '@tableau/api-internal-contract-js';
/**
 * This is an implementation of the InternalApiDispatcher interface which functions by passing messages
 * across a frame boundary. This is usually between the code where our javscript library has been included
 * by a 3rd party dev and another frame where Tableau server has content.
 */
export declare class CrossFrameDispatcher implements InternalApiDispatcher {
    private _messenger;
    private _pendingPromises;
    private _notificationHandlers;
    /**
     * Creates an instance of CrossFrameDispatcher which will use the given messenger to communicate
     * @param _messenger an instantiated and listening messenger object
     */
    constructor(_messenger: Messenger);
    execute(verb: VerbId, parameters: ExecuteParameters): Promise<ExecuteResponse>;
    registerNotificationHandler(handler: NotificationHandler): void;
    unregisterNotificationHandler(handler: NotificationHandler): void;
    private onCommandResponse;
    private onNotification;
}
//# sourceMappingURL=CrossFrameDispatcher.d.ts.map