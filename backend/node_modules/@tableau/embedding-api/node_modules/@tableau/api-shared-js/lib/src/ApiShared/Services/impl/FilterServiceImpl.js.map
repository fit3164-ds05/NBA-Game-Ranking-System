{"version":3,"file":"FilterServiceImpl.js","sourceRoot":"","sources":["../../../../../src/ApiShared/Services/impl/FilterServiceImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport {\n  DateRangeType,\n  EmbeddingErrorCodes,\n  ErrorCodes,\n  FilterDomainType,\n  FilterType as ExternalFilterType,\n  SharedErrorCodes,\n} from '@tableau/api-external-contract-js';\nimport * as InternalContract from '@tableau/api-internal-contract-js';\nimport { ExecuteParameters, FilterType, ParameterId, VerbId, VisualId } from '@tableau/api-internal-contract-js';\nimport { TableauError } from '../../../ApiShared';\nimport { ExternalToInternalEnumMappings as ExternalEnumConverter } from '../../EnumMappings/ExternalToInternalEnumMappings';\nimport { InternalToExternalEnumMappings as InternalEnumConverter } from '../../EnumMappings/InternalToExternalEnumMappings';\nimport {\n  CategoricalDomain,\n  CategoricalFilter,\n  HierarchicalDataValue,\n  HierarchicalFilter,\n  HierarchicalLevelDetail,\n  RangeDomain,\n  RangeFilter,\n  RelativeDateFilter,\n} from '../../Models/FilterModels';\nimport { DataValue } from '../../Models/GetDataModels';\nimport { DataValueFactory } from '../../Utils/DataValueFactory';\nimport { Param } from '../../Utils/Param';\nimport { FilterService } from '../FilterService';\nimport { ServiceNames } from '../ServiceRegistry';\nimport { ServiceImplBase } from './ServiceImplBase';\n\nexport class FilterServiceImpl extends ServiceImplBase implements FilterService {\n  public get serviceName(): string {\n    return ServiceNames.Filter;\n  }\n\n  public applyFilterAsync(\n    visualId: VisualId,\n    fieldName: string,\n    values: Array<string>,\n    updateType: Contract.FilterUpdateType,\n    filterOptions: Contract.FilterOptions,\n  ): Promise<string> {\n    const verb = VerbId.ApplyCategoricalFilter;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'applyFilterAsync',\n    };\n    parameters[ParameterId.VisualId] = visualId;\n    parameters[ParameterId.FieldName] = fieldName;\n    if (!Array.isArray(values)) {\n      throw new TableauError(ErrorCodes.InvalidParameter, 'values parameter for applyFilterAsync must be an array');\n    }\n    parameters[ParameterId.FilterValues] = values;\n    parameters[ParameterId.FilterUpdateType] = ExternalEnumConverter.filterUpdateType.convert(updateType);\n    parameters[ParameterId.IsExcludeMode] =\n      filterOptions === undefined || filterOptions.isExcludeMode === undefined ? false : filterOptions.isExcludeMode;\n\n    return this.execute(verb, parameters).then<string>((response) => {\n      return fieldName;\n    });\n  }\n\n  public applyRangeFilterAsync(visualId: VisualId, fieldName: string, filterOptions: Contract.RangeFilterOptions): Promise<string> {\n    const verb = VerbId.ApplyRangeFilter;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'applyRangeFilterAsync',\n    };\n\n    if (filterOptions.min !== undefined && filterOptions.min !== null) {\n      let min: string | number;\n      if (filterOptions.min instanceof Date) {\n        min = Param.serializeDateForPlatform(filterOptions.min);\n      } else {\n        min = filterOptions.min;\n      }\n      parameters[ParameterId.FilterRangeMin] = min;\n    }\n\n    if (filterOptions.max !== undefined && filterOptions.max !== null) {\n      let max: string | number;\n      if (filterOptions.max instanceof Date) {\n        max = Param.serializeDateForPlatform(filterOptions.max);\n      } else {\n        max = filterOptions.max;\n      }\n      parameters[ParameterId.FilterRangeMax] = max;\n    }\n\n    // The null option is used with min+max for 'include-range' or 'include-range-or-null'\n    if (filterOptions.nullOption) {\n      parameters[ParameterId.FilterRangeNullOption] = ExternalEnumConverter.nullOptions.convert(filterOptions.nullOption);\n    }\n\n    parameters[ParameterId.FieldName] = fieldName;\n    parameters[ParameterId.VisualId] = visualId;\n\n    return this.execute(verb, parameters).then<string>((response) => {\n      this.apiFilterHandlerCheckForCommandError(response.result as { [key: string]: string });\n      return fieldName;\n    });\n  }\n\n  public applyHierarchicalFilterAsync(\n    visualId: VisualId,\n    fieldName: string,\n    values: Array<string> | Contract.HierarchicalLevels,\n    updateType: Contract.FilterUpdateType,\n    filterOptions: Contract.FilterOptions,\n  ): Promise<string> {\n    const verb = VerbId.HierarchicalFilter;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'applyHierarchicalFilterAsync',\n    };\n    parameters[ParameterId.VisualId] = visualId;\n    parameters[ParameterId.FieldName] = fieldName;\n\n    const hierarchicalLevels = (values as Contract.HierarchicalLevels).levels;\n\n    if (Array.isArray(hierarchicalLevels) && hierarchicalLevels.length > 0) {\n      parameters[ParameterId.FilterLevels] = hierarchicalLevels;\n    } else if ((values as Array<String>).length > 0) {\n      parameters[ParameterId.FilterValues] = values;\n    } else {\n      // the server command expects empty list for clearing the filter\n      // it also expects eithers FilterLevels or FilterValues to be set\n      parameters[ParameterId.FilterLevels] = [];\n    }\n\n    parameters[ParameterId.FilterUpdateType] = ExternalEnumConverter.filterUpdateType.convert(updateType);\n    parameters[ParameterId.IsExcludeMode] = filterOptions && !!filterOptions.isExcludeMode;\n\n    return this.execute(verb, parameters).then<string>((response) => {\n      return fieldName;\n    });\n  }\n\n  public clearFilterAsync(visualId: VisualId, fieldName: string): Promise<string> {\n    const verb = VerbId.ClearFilter;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'clearFilterAsync',\n    };\n    parameters[ParameterId.VisualId] = visualId;\n    parameters[ParameterId.FieldName] = fieldName;\n    return this.execute(verb, parameters).then<string>((resposne) => {\n      return fieldName;\n    });\n  }\n\n  public applyRelativeDateFilterAsync(visualId: VisualId, fieldName: string, options: Contract.RelativeDateFilterOptions) {\n    const verb = VerbId.ApplyRelativeDateFilter;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'applyRelativeDateFilterAsync',\n    };\n    parameters[ParameterId.VisualId] = visualId;\n    parameters[ParameterId.FieldName] = fieldName;\n    parameters[ParameterId.PeriodType] = ExternalEnumConverter.periodType.convert(options.periodType);\n    parameters[ParameterId.DateRangeType] = ExternalEnumConverter.dateRangeType.convert(options.rangeType);\n    if (options.rangeType === DateRangeType.LastN || options.rangeType === DateRangeType.NextN) {\n      if (options.rangeN === undefined || options.rangeN === null) {\n        throw new TableauError(\n          EmbeddingErrorCodes.MissingRangeNForRelativeDateFilters,\n          'Missing rangeN field for a relative date filter of LASTN or NEXTN.',\n        );\n      }\n      parameters[ParameterId.RangeN] = options.rangeN;\n    }\n\n    if (options.anchorDate !== undefined && options.anchorDate !== null) {\n      parameters[ParameterId.AnchorDate] = this.convertAnchorDate(options.anchorDate);\n    }\n\n    return this.execute(verb, parameters).then<string>((response) => {\n      return response.result as string;\n    });\n  }\n\n  public getFiltersAsync(visualId: VisualId): Promise<Array<Contract.Filter>> {\n    const verb = VerbId.GetFilters;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'getFiltersAsync',\n    };\n    parameters[ParameterId.VisualId] = visualId;\n    return this.execute(verb, parameters).then<Array<Contract.Filter>>((response) => {\n      const filters = response.result as Array<InternalContract.Filter>;\n      return this.convertDomainFilters(filters);\n    });\n  }\n\n  public getCategoricalDomainAsync(\n    worksheetName: string,\n    fieldId: string,\n    domainType: FilterDomainType,\n  ): Promise<Contract.CategoricalDomain> {\n    const verb = VerbId.GetCategoricalDomain;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'getCategoricalDomainAsync',\n    };\n    parameters[ParameterId.VisualId] = {\n      worksheet: worksheetName,\n    };\n\n    parameters[ParameterId.FieldId] = fieldId;\n    parameters[ParameterId.DomainType] = ExternalEnumConverter.filterDomainType.convert(domainType);\n    return this.execute(verb, parameters).then<Contract.CategoricalDomain>((response) => {\n      const domain = response.result as InternalContract.CategoricalDomain;\n      return this.convertCategoricalDomain(domain, domainType);\n    });\n  }\n\n  public getRangeDomainAsync(worksheetName: string, fieldId: string, domainType: FilterDomainType): Promise<Contract.RangeDomain> {\n    const verb = VerbId.GetRangeDomain;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'getRangeDomainAsync',\n    };\n    parameters[ParameterId.VisualId] = {\n      worksheet: worksheetName,\n    };\n\n    parameters[ParameterId.FieldId] = fieldId;\n    parameters[ParameterId.DomainType] = ExternalEnumConverter.filterDomainType.convert(domainType);\n    return this.execute(verb, parameters).then<Contract.RangeDomain>((response) => {\n      const domain = response.result as InternalContract.RangeDomain;\n\n      return this.convertRangeDomain(domain, domainType);\n    });\n  }\n\n  public getDashboardFiltersAsync(): Promise<Array<Contract.Filter>> {\n    const verb = VerbId.GetDashboardFilters;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'getDashboardFiltersAsync',\n    };\n    return this.execute(verb, parameters).then<Array<Contract.Filter>>((response) => {\n      const filters = response.result as Array<InternalContract.Filter>;\n      return this.convertDomainFilters(filters);\n    });\n  }\n\n  public applyDashboardFilterAsync(\n    fieldName: string,\n    values: Array<string>,\n    updateType: Contract.FilterUpdateType,\n    filterOptions: Contract.FilterOptions,\n  ): Promise<string> {\n    const verb = VerbId.DashboardCategoricalFilter;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'applyDashboardFilterAsync',\n    };\n    parameters[ParameterId.FieldName] = fieldName;\n    parameters[ParameterId.FilterValues] = values;\n    parameters[ParameterId.FilterUpdateType] = ExternalEnumConverter.filterUpdateType.convert(updateType);\n    parameters[ParameterId.IsExcludeMode] = filterOptions && !!filterOptions.isExcludeMode;\n\n    return this.execute(verb, parameters).then<string>((response) => {\n      return response.result as string;\n    });\n  }\n\n  public async getAppliedWorksheetsAsync(worksheetName: string, fieldId: string): Promise<Array<string>> {\n    const sharedFilterModel = await this.executeGetAppliedWorksheets(worksheetName, fieldId, 'getAppliedWorksheetsAsync');\n    const worksheetNames: string[] = [];\n    sharedFilterModel.worksheets?.map((worksheetInfo: InternalContract.SharedFilterWorksheetModel) => {\n      if (worksheetInfo.isSelected) {\n        worksheetNames.push(worksheetInfo.worksheetName);\n      }\n    });\n    return worksheetNames;\n  }\n\n  public async setAppliedWorksheetsAsync(\n    worksheetName: string,\n    fieldName: string,\n    fieldId: string,\n    applyToWorksheets: Array<string>,\n  ): Promise<Array<string>> {\n    const sharedFilterModel = await this.executeGetAppliedWorksheets(worksheetName, fieldId, 'getAppliedWorksheetsAsyncInternal');\n    if (!sharedFilterModel || !sharedFilterModel.worksheets) {\n      throw new TableauError(SharedErrorCodes.InternalError, 'This filter does not apply to multiple worksheets');\n    }\n\n    const allowedWorksheets: string[] = [];\n    let activeWorksheet = '';\n    sharedFilterModel.worksheets.forEach((worksheet) => {\n      // Get active worksheet\n      if (worksheet.isActive) {\n        activeWorksheet = worksheet.worksheetName;\n      }\n\n      // Populate allowed worksheets\n      if (worksheet.isSelected || worksheet.isEnabled) {\n        allowedWorksheets.push(worksheet.worksheetName);\n      }\n    });\n\n    if (activeWorksheet === '') {\n      throw new TableauError(SharedErrorCodes.InternalError, 'No active worksheet');\n    }\n\n    if (!applyToWorksheets.includes(activeWorksheet)) {\n      throw new TableauError(SharedErrorCodes.InternalError, `${activeWorksheet} must be included in the applied worksheets`);\n    }\n\n    applyToWorksheets.forEach((sheet) => {\n      // check if it's present within compatible sheets\n      if (!allowedWorksheets.includes(sheet)) {\n        throw new TableauError(SharedErrorCodes.InternalError, `The field ${fieldName} isn't applicable to the worksheet ${sheet}`);\n      }\n    });\n\n    const verb = VerbId.ChangeSharedFilter;\n    const parameters: ExecuteParameters = {};\n    parameters[ParameterId.FunctionName] = 'setAppliedWorksheetsAsync';\n    parameters[ParameterId.VisualId] = {\n      worksheet: worksheetName,\n    };\n    parameters[ParameterId.FieldId] = fieldId;\n    parameters[ParameterId.SharedFilterSheets] = applyToWorksheets;\n\n    return this.execute(verb, parameters).then<string[]>((response) => {\n      return applyToWorksheets;\n    });\n  }\n\n  // Helper Methods\n\n  private executeGetAppliedWorksheets(\n    worksheetName: string,\n    fieldId: string,\n    telemetryFunctionName: string,\n  ): Promise<InternalContract.SharedFilterModel> {\n    const verb = VerbId.GetSharedFilter;\n    const parameters: ExecuteParameters = {};\n    parameters[ParameterId.FunctionName] = telemetryFunctionName;\n    parameters[ParameterId.VisualId] = {\n      worksheet: worksheetName,\n    };\n    parameters[ParameterId.FieldId] = fieldId;\n\n    return this.execute(verb, parameters).then<InternalContract.SharedFilterModel>((response) => {\n      const sharedFilterModel = response.result as InternalContract.SharedFilterModel;\n      return sharedFilterModel;\n    });\n  }\n\n  private convertDomainFilters(domainFilters: Array<InternalContract.Filter>): Array<Contract.Filter> {\n    const filters: Array<Contract.Filter> = [];\n    domainFilters.forEach((domainFilter) => {\n      switch (domainFilter.filterType) {\n        case FilterType.Categorical: {\n          const filter = domainFilter as InternalContract.CategoricalFilter;\n          if (filter) {\n            filters.push(this.convertCategoricalFilter(filter));\n          } else {\n            throw new Error('Invalid Categorical Filter');\n          }\n          break;\n        }\n\n        case FilterType.Hierarchical: {\n          const filter = domainFilter as InternalContract.HierarchicalFilter;\n          if (filter) {\n            filters.push(this.convertHierarchicalFilter(filter));\n          } else {\n            throw new Error('Invalid Hierarchical Filter');\n          }\n          break;\n        }\n\n        case FilterType.Range: {\n          const filter = domainFilter as InternalContract.RangeFilter;\n          if (filter) {\n            filters.push(this.convertRangeFilter(filter));\n          } else {\n            throw new Error('Invalid Range Filter');\n          }\n          break;\n        }\n\n        case FilterType.RelativeDate: {\n          const filter = domainFilter as InternalContract.RelativeDateFilter;\n          if (filter) {\n            filters.push(this.convertRelativeDateFilter(filter));\n          } else {\n            throw new Error('Invalid Relative Date Filter');\n          }\n          break;\n        }\n\n        default: {\n          break;\n        }\n      }\n    });\n    return filters;\n  }\n\n  private convertCategoricalFilter(domainFilter: InternalContract.CategoricalFilter): Contract.CategoricalFilter {\n    const appliedValues: Array<Contract.DataValue> = domainFilter.values.map((dv) => {\n      return DataValueFactory.MakeFilterDataValue(dv);\n    });\n\n    return new CategoricalFilter(\n      domainFilter.visualId.worksheet,\n      domainFilter.fieldCaption,\n      domainFilter.fieldName,\n      FilterType.Categorical,\n      this._registryId,\n      appliedValues,\n      domainFilter.isExclude,\n      domainFilter.isAllSelected,\n    );\n  }\n\n  private convertHierarchicalFilter(domainFilter: InternalContract.HierarchicalFilter): Contract.HierarchicalFilter {\n    const appliedValues: Array<Contract.HierarchicalFilterDataValue> = domainFilter.values.map((hierarchicalDataValue) => {\n      return new HierarchicalDataValue(\n        DataValueFactory.MakeFilterDataValue(hierarchicalDataValue.value),\n        hierarchicalDataValue.hierarchicalPath,\n        hierarchicalDataValue.level,\n      );\n    });\n\n    const levelDetails: Array<Contract.HierarchicalLevelDetail> = domainFilter.levelInfo.map((aLevel) => {\n      return new HierarchicalLevelDetail(\n        aLevel.name,\n        InternalEnumConverter.hierarchicalLevelSelectionState.convert(aLevel.levelSelectionState),\n      );\n    });\n\n    return new HierarchicalFilter(\n      domainFilter.visualId.worksheet,\n      domainFilter.fieldCaption,\n      domainFilter.fieldName,\n      FilterType.Hierarchical,\n      this._registryId,\n      domainFilter.dimensionName,\n      domainFilter.hierarchyCaption,\n      domainFilter.levels,\n      levelDetails,\n      appliedValues,\n      domainFilter.isAllSelected,\n    );\n  }\n\n  private convertRangeFilter(domainFilter: InternalContract.RangeFilter): Contract.RangeFilter {\n    const minValue: DataValue = DataValueFactory.MakeFilterDataValue(domainFilter.min);\n    const maxValue: DataValue = DataValueFactory.MakeFilterDataValue(domainFilter.max);\n    return new RangeFilter(\n      domainFilter.visualId.worksheet,\n      domainFilter.fieldCaption,\n      domainFilter.fieldName,\n      FilterType.Range,\n      this._registryId,\n      minValue,\n      maxValue,\n      domainFilter.includeNullValues,\n    );\n  }\n\n  private convertRelativeDateFilter(domainFilter: InternalContract.RelativeDateFilter): Contract.RelativeDateFilter {\n    const anchorDateValue: DataValue = DataValueFactory.MakeFilterDataValue(domainFilter.anchorDate);\n    return new RelativeDateFilter(\n      domainFilter.visualId.worksheet,\n      domainFilter.fieldCaption,\n      domainFilter.fieldName,\n      ExternalFilterType.RelativeDate,\n      this._registryId,\n      anchorDateValue,\n      InternalEnumConverter.dateStepPeriod.convert(domainFilter.periodType),\n      InternalEnumConverter.dateRangeType.convert(domainFilter.rangeType),\n      domainFilter.rangeN,\n    );\n  }\n\n  private convertCategoricalDomain(domain: InternalContract.CategoricalDomain, domainType: FilterDomainType): Contract.CategoricalDomain {\n    const values: Array<DataValue> = domain.values.map((domainDv) => {\n      return DataValueFactory.MakeFilterDataValue(domainDv);\n    });\n    return new CategoricalDomain(values, domainType);\n  }\n\n  private convertRangeDomain(domain: InternalContract.RangeDomain, domainType: FilterDomainType): Contract.RangeDomain {\n    const min: DataValue = DataValueFactory.MakeFilterDataValue(domain.min);\n    const max: DataValue = DataValueFactory.MakeFilterDataValue(domain.max);\n    return new RangeDomain(min, max, domainType);\n  }\n\n  private convertAnchorDate(anchorDate: Date): string {\n    // Converts a Date object into a string format that the server expects for date/time values.\n    // If anchorDate doesn't represent a valid Date object, any of these would be NaN.\n    const year = anchorDate.getUTCFullYear();\n    const month = anchorDate.getUTCMonth() + 1;\n    const day = anchorDate.getUTCDate();\n    const hh = anchorDate.getUTCHours();\n    const mm = anchorDate.getUTCMinutes();\n    const sec = anchorDate.getUTCSeconds();\n\n    if (isNaN(year) || isNaN(month) || isNaN(day) || isNaN(hh) || isNaN(mm) || isNaN(sec)) {\n      throw new TableauError(EmbeddingErrorCodes.InvalidDateParameter, 'Invalid date parameter: anchorDate');\n    }\n\n    const result = `${year}-${month}-${day} ${hh}:${mm}:${sec}`;\n    return result;\n  }\n\n  private apiFilterHandlerCheckForCommandError(serverPm: { [key: string]: string }) {\n    if (!serverPm[InternalContract.ParameterId.ParameterError]) {\n      return;\n    }\n    if (serverPm[InternalContract.ParameterId.InvalidFieldCaption]) {\n      throw new TableauError(SharedErrorCodes.InvalidFilterFieldName, serverPm[InternalContract.ParameterId.InvalidFieldCaption]);\n    }\n    if (serverPm[InternalContract.ParameterId.InvalidValues]) {\n      throw new TableauError(SharedErrorCodes.InvalidFilterFieldValue, serverPm[InternalContract.ParameterId.InvalidValues]);\n    }\n    if (serverPm[InternalContract.ParameterId.InvalidAggFieldName]) {\n      throw new TableauError(SharedErrorCodes.InvalidAggregationFieldName, serverPm[InternalContract.ParameterId.InvalidAggFieldName]);\n    }\n    throw new TableauError(SharedErrorCodes.ServerError, 'Server Error');\n  }\n}\n"]}