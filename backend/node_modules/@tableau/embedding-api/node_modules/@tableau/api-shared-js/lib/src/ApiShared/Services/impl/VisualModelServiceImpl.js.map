{"version":3,"file":"VisualModelServiceImpl.js","sourceRoot":"","sources":["../../../../../src/ApiShared/Services/impl/VisualModelServiceImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport { ExecuteParameters, ParameterId, VerbId, VisualId, VisualSpecification } from '@tableau/api-internal-contract-js';\nimport { ServiceNames } from '../ServiceRegistry';\nimport { VisualModelService } from '../VisualModelService';\nimport { ServiceImplBase } from './ServiceImplBase';\n\nexport class VisualModelServiceImpl extends ServiceImplBase implements VisualModelService {\n  public get serviceName(): string {\n    return ServiceNames.VisualModel;\n  }\n\n  public getVisualSpecificationAsync(visualId: VisualId): Promise<Contract.VisualSpecification> {\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'getVisualSpecificationAsync',\n      [ParameterId.WorksheetName]: visualId.worksheet,\n    };\n\n    return this.execute(VerbId.GetVisualSpecification, parameters).then<Contract.VisualSpecification>((response) => {\n      const result = response.result as VisualSpecification;\n      return result;\n    });\n  }\n\n  public addMarksCardFieldsAsync(\n    visualId: VisualId,\n    marksCardIndex: number,\n    encodingType: Contract.EncodingType,\n    columns: Array<Contract.Column>,\n    startIndex: number,\n  ): Promise<void> {\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'addMarksCardFieldsAsync',\n      [ParameterId.WorksheetName]: visualId.worksheet,\n      [ParameterId.MarksCardIndex]: marksCardIndex,\n      [ParameterId.EncodingType]: encodingType,\n      [ParameterId.Columns]: columns,\n      [ParameterId.StartIndex]: startIndex,\n    };\n    return this.execute(VerbId.AddMarksCardFields, parameters).then(() => {\n      return;\n    });\n  }\n\n  public moveMarksCardFieldAsync(\n    visualId: VisualId,\n    marksCardIndex: number,\n    fromIndex: number,\n    toIndex: number,\n    fieldCount = 1,\n  ): Promise<void> {\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'addMarksCardFieldsAsync',\n      [ParameterId.WorksheetName]: visualId.worksheet,\n      [ParameterId.MarksCardIndex]: marksCardIndex,\n      [ParameterId.FromIndex]: fromIndex,\n      [ParameterId.ToIndex]: toIndex,\n      [ParameterId.FieldCount]: fieldCount,\n    };\n    return this.execute(VerbId.MoveMarksCardField, parameters).then(() => {\n      return;\n    });\n  }\n\n  public spliceMarksCardFieldsAsync(\n    visualId: VisualId,\n    marksCardIndex: number,\n    encodingType: Contract.EncodingType,\n    startIndex: number,\n    deleteCount: number,\n    columns: Array<Contract.Column>,\n  ): Promise<void> {\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'spliceMarksCardFieldsAsync',\n      [ParameterId.WorksheetName]: visualId.worksheet,\n      [ParameterId.MarksCardIndex]: marksCardIndex,\n      [ParameterId.EncodingType]: encodingType,\n      [ParameterId.StartIndex]: startIndex,\n      [ParameterId.DeleteCount]: deleteCount,\n      [ParameterId.Columns]: columns,\n    };\n    return this.execute(VerbId.SpliceMarksCardFields, parameters).then(() => {\n      return;\n    });\n  }\n\n  editAliasesDialogAsync(fieldName: string): Promise<void> {\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'editAliasesDialogAsync',\n      [ParameterId.FieldId]: fieldName,\n    };\n    return this.execute(VerbId.EditAliasesDialog, parameters).then(() => {\n      return;\n    });\n  }\n}\n"]}