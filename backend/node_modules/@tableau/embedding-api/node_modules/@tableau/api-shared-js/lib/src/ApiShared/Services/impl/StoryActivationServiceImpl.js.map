{"version":3,"file":"StoryActivationServiceImpl.js","sourceRoot":"","sources":["../../../../../src/ApiShared/Services/impl/StoryActivationServiceImpl.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,8EAA4G;AAG5G,qDAAoD;AAEpD;IAAgD,8CAAe;IAA/D;;IAkDA,CAAC;IAjDC,sBAAW,mDAAW;aAAtB;YACE,wDAAoC;QACtC,CAAC;;;OAAA;IAED,gEAA2B,GAA3B;;QACE,IAAM,IAAI,GAAG,iCAAM,CAAC,sBAAsB,CAAC;QAC3C,IAAM,UAAU;YACd,GAAC,sCAAW,CAAC,YAAY,IAAG,6BAA6B;eAC1D,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,IAAI,CAAO,UAAC,QAAQ;YACxD,OAAO;QACT,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oEAA+B,GAA/B;;QACE,IAAM,IAAI,GAAG,iCAAM,CAAC,0BAA0B,CAAC;QAC/C,IAAM,UAAU;YACd,GAAC,sCAAW,CAAC,YAAY,IAAG,iCAAiC;eAC9D,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,IAAI,CAAO,UAAC,QAAQ;YACxD,OAAO;QACT,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4DAAuB,GAAvB,UAAwB,KAAa;;QACnC,IAAM,IAAI,GAAG,iCAAM,CAAC,kBAAkB,CAAC;QACvC,IAAM,UAAU;YACd,GAAC,sCAAW,CAAC,YAAY,IAAG,yBAAyB;eACtD,CAAC;QACF,UAAU,CAAC,sCAAW,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC;QAEhD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,IAAI,CAAO,UAAC,QAAQ;YACxD,OAAO;QACT,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAqB,GAArB,UAAsB,KAAa;;QACjC,IAAM,IAAI,GAAG,iCAAM,CAAC,gBAAgB,CAAC;QACrC,IAAM,UAAU;YACd,GAAC,sCAAW,CAAC,YAAY,IAAG,uBAAuB;eACpD,CAAC;QACF,UAAU,CAAC,sCAAW,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC;QAEhD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,IAAI,CAAkB,UAAC,QAAQ;YACnE,OAAO,QAAQ,CAAC,MAAyB,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IACH,iCAAC;AAAD,CAAC,AAlDD,CAAgD,iCAAe,GAkD9D;AAlDY,gEAA0B","sourcesContent":["import { ExecuteParameters, ParameterId, StoryPointModel, VerbId } from '@tableau/api-internal-contract-js';\nimport { ServiceNames } from '../ServiceRegistry';\nimport { StoryActivationService } from '../StoryActivationService';\nimport { ServiceImplBase } from './ServiceImplBase';\n\nexport class StoryActivationServiceImpl extends ServiceImplBase implements StoryActivationService {\n  public get serviceName(): string {\n    return ServiceNames.StoryActivation;\n  }\n\n  activateNextStoryPointAsync(): Promise<void> {\n    const verb = VerbId.ActivateNextStoryPoint;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'activateNextStoryPointAsync',\n    };\n\n    return this.execute(verb, parameters).then<void>((response) => {\n      return;\n    });\n  }\n\n  activatePreviousStoryPointAsync(): Promise<void> {\n    const verb = VerbId.ActivatePreviousStoryPoint;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'activatePreviousStoryPointAsync',\n    };\n\n    return this.execute(verb, parameters).then<void>((response) => {\n      return;\n    });\n  }\n\n  activateStoryPointAsync(index: number): Promise<void> {\n    const verb = VerbId.ActivateStoryPoint;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'activateStoryPointAsync',\n    };\n    parameters[ParameterId.StoryPointIndex] = index;\n\n    return this.execute(verb, parameters).then<void>((response) => {\n      return;\n    });\n  }\n\n  revertStoryPointAsync(index: number): Promise<StoryPointModel> {\n    const verb = VerbId.RevertStoryPoint;\n    const parameters: ExecuteParameters = {\n      [ParameterId.FunctionName]: 'revertStoryPointAsync',\n    };\n    parameters[ParameterId.StoryPointIndex] = index;\n\n    return this.execute(verb, parameters).then<StoryPointModel>((response) => {\n      return response.result as StoryPointModel;\n    });\n  }\n}\n"]}