import { ApiMenuType, ContextMenuOptions } from '@tableau/api-external-contract-js';
import { ApiService } from './ServiceRegistry';
/**
 * Service for implementing the logic for various external context menu calls.
 *
 * @interface ExternalContextMenuService
 * @extends {ApiService}
 */
export interface ExternalContextMenuService extends ApiService {
    /**
     * Injects external context menu item.
     * @param sheetName Name of the target worksheet for context menu injection.
     * @param targetMenu Defines where to inject new external menu item.
     * @param config Provides configuration information for new external menu item.
     * @returns Unique identifier for newly injected context menu item.
     */
    appendContextMenuAsync(sheetName: string, targetMenu: ApiMenuType, config: ContextMenuOptions): Promise<string>;
    /**
     * Removes external context menu item.
     * @param sheetName Name of the target worksheet for context menu injection.
     * @param targetMenu Defines where to remove new external menu item.
     * @param menuItemId Unique identifier of external context menu item that user wants to remove.
     */
    removeContextMenuAsync(sheetName: string, targetMenu: ApiMenuType, menuItemId: string): Promise<void>;
    /**
     * Executes external context menu item.
     * @param sheetName Name of the target worksheet for context menu injection.
     * @param targetMenu Defines where to execute new external menu item.
     * @param menuItemId Unique identifier of external context menu item that user wants to execute.
     */
    executeContextMenuAsync(sheetName: string, targetMenu: ApiMenuType, menuItemId: string): Promise<void>;
    /**
     * Sets the display header for the external context menu.
     * @param sheetName Name of the target worksheet for context menu injection.
     * @param targetMenu Specifies the location of the external context menu.
     * @param menuHeader Defines a header string to be displayed for the menu.
     * @param menuDescription Defines a description of the menu to be displayed in a tooltip
     */
    renameContextMenuAsync(sheetName: string, targetMenu: ApiMenuType, menuHeader: string, menuDescription: string): Promise<void>;
}
//# sourceMappingURL=ExternalContextMenuService.d.ts.map