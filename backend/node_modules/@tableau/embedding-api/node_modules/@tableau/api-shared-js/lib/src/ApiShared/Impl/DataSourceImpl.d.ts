import * as Contract from '@tableau/api-external-contract-js';
import * as InternalContract from '@tableau/api-internal-contract-js';
export declare class DataSourceImpl {
    private _dataSourceInfo;
    private _registryId;
    private _fields;
    constructor(_dataSourceInfo: InternalContract.DataSource, _registryId: number);
    get name(): string;
    get id(): string;
    get extractUpdateTime(): string | undefined;
    get fields(): Array<Contract.Field>;
    get isExtract(): boolean;
    get isPublished(): boolean | undefined;
    publishedUrl(): string | undefined;
    getMaxPageRowLimit(): number;
    refreshAsync(): Promise<void>;
    getConnectionSummariesAsync(): Promise<Contract.ConnectionSummary[]>;
    getActiveTablesAsync(): Promise<Array<Contract.TableSummary>>;
    getUnderlyingDataAsync(options?: Contract.DataSourceUnderlyingDataOptions): Promise<Contract.DataTable>;
    getLogicalTableDataAsync(logicalTableId: string, options?: Contract.DataSourceUnderlyingDataOptions): Promise<Contract.DataTable>;
    getLogicalTableDataReaderAsync(logicalTableId: string, pageRowCount?: number, options?: Contract.DataSourceUnderlyingDataOptions): Promise<Contract.DataTableReader>;
    initializeWithPublicInterfaces(dataSource: Contract.DataSource): void;
    getLogicalTablesAsync(): Promise<Array<Contract.LogicalTable>>;
}
//# sourceMappingURL=DataSourceImpl.d.ts.map