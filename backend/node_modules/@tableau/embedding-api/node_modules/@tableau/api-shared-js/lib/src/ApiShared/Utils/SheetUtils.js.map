{"version":3,"file":"SheetUtils.js","sourceRoot":"","sources":["../../../../src/ApiShared/Utils/SheetUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport { SheetInfo, SheetType, SizeConstraint } from '@tableau/api-internal-contract-js';\nimport { TableauError } from '../TableauError';\n\nexport class SheetUtils {\n  // This is a direct port from SheetSize.cs - SheetSizeFactory\n  public static getSheetSizeFromSizeConstraints(sizeConstraint: SizeConstraint): Contract.SheetSize {\n    const { minWidth, minHeight, maxWidth, maxHeight } = sizeConstraint;\n\n    if (minHeight === 0 && minWidth === 0) {\n      if (maxHeight === 0 && maxWidth === 0) {\n        return {\n          behavior: Contract.SheetSizeBehavior.Automatic,\n        };\n      }\n\n      return {\n        behavior: Contract.SheetSizeBehavior.AtMost,\n        maxSize: { width: maxWidth, height: maxHeight },\n      };\n    }\n\n    if (maxHeight === 0 && maxWidth === 0) {\n      return {\n        behavior: Contract.SheetSizeBehavior.AtLeast,\n        minSize: { width: minWidth, height: minHeight },\n      };\n    }\n\n    if (maxHeight === minHeight && maxWidth === minWidth && minWidth > 0) {\n      return {\n        behavior: Contract.SheetSizeBehavior.Exactly,\n        minSize: { width: minWidth, height: minHeight },\n        maxSize: { width: minWidth, height: minHeight },\n      };\n    }\n\n    // 'Fit Width' for a DSD layout\n    const isDsdLayout = minWidth === 0 && maxWidth === 0;\n\n    return {\n      behavior: Contract.SheetSizeBehavior.Range,\n      minSize: { width: minWidth, height: minHeight },\n      maxSize: { width: isDsdLayout ? 2147483647 : maxWidth, height: maxHeight },\n    };\n  }\n\n  public static createAutomaticSize(): Contract.SheetSize {\n    let behavior = Contract.SheetSizeBehavior.Automatic;\n    let minSize = { width: 0, height: 0 };\n    let maxSize = { width: 0, height: 0 };\n    return { behavior, minSize, maxSize };\n  }\n\n  public static getPublishedSheetInfoByName(name: string, sheetInfos: Array<SheetInfo>): SheetInfo | undefined {\n    const sheetInfo = sheetInfos.find((sheet) => sheet.name === name);\n    return sheetInfo;\n  }\n\n  public static getSheetTypeEnum(internalSheetType: SheetType): Contract.SheetType {\n    let sheetType: Contract.SheetType;\n    switch (internalSheetType) {\n      case SheetType.Worksheet: {\n        sheetType = Contract.SheetType.Worksheet;\n        break;\n      }\n      case SheetType.Dashboard: {\n        sheetType = Contract.SheetType.Dashboard;\n        break;\n      }\n      case SheetType.Story: {\n        sheetType = Contract.SheetType.Story;\n        break;\n      }\n      default: {\n        throw new TableauError(Contract.SharedErrorCodes.ServerError, 'Invalid SheetType');\n      }\n    }\n    return sheetType;\n  }\n\n  public static isValidSheetSize(sizeObject: Contract.Size | Contract.SheetSize): sizeObject is Contract.SheetSize {\n    return (<Contract.SheetSize>sizeObject).behavior !== undefined;\n  }\n}\n"]}