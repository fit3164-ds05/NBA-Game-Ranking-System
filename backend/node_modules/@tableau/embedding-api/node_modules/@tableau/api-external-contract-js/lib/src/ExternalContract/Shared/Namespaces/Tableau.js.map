{"version":3,"file":"Tableau.js","sourceRoot":"","sources":["../../../../../src/ExternalContract/Shared/Namespaces/Tableau.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * The tableau namespace exists for organization and to avoid polluting\n * the global namespace. It contains no constructs other than sub-namespaces and the Tableau enumerations.\n */\nnamespace Tableau {\n  export enum AnalyticsObjectType {\n    Cluster = 'cluster',\n    Forecast = 'forecast',\n    TrendLine = 'trend-line',\n  }\n\n  export enum AnnotationType {\n    Mark = 'mark',\n    Point = 'point',\n    Area = 'area',\n  }\n\n  export enum ColumnType {\n    Discrete = 'discrete',\n    Continuous = 'continuous',\n    Unknown = 'unknown',\n  }\n\n  export enum ClassNameKey {\n    WorksheetTitle = 'tableau-worksheet-title',\n    Worksheet = 'tableau-worksheet',\n    Tooltip = 'tableau-tooltip',\n    StoryTitle = 'tableau-story-title',\n    DashboardTitle = 'tableau-dashboard-title',\n    Pane = 'tableau-pane',\n    RowDividers = 'tableau-row-dividers',\n    ColumnDividers = 'tableau-column-dividers',\n  }\n\n  /**\n   * What the object represents in a dashboard.\n   */\n  export enum DashboardObjectType {\n    Blank = 'blank',\n    Worksheet = 'worksheet',\n    QuickFilter = 'quick-filter',\n    ParameterControl = 'parameter-control',\n    PageFilter = 'page-filter',\n    Legend = 'legend',\n    Title = 'title',\n    Text = 'text',\n    Image = 'image',\n    WebPage = 'web-page',\n    Extension = 'extension',\n  }\n\n  /**\n   * Enum that represents the visibility state of a dashboard object.\n   * @since 1.7.0\n   */\n  export enum DashboardObjectVisibilityType {\n    /** Used for turning on the visibility of a dashboard object.*/\n    Show = 'show',\n\n    /** Used for turning off the visibility of a dashboard object.*/\n    Hide = 'hide',\n  }\n\n  /**\n   * The different types of data a value can have\n   */\n  export enum DataType {\n    String = 'string',\n    Int = 'int',\n    Float = 'float',\n    Bool = 'bool',\n    Date = 'date',\n    DateTime = 'date-time',\n    Spatial = 'spatial',\n    Unknown = 'unknown',\n  }\n\n  /**\n   * Enum that represents the changes that occur to a dashboard object.\n   */\n  export enum DashboardLayoutChange {\n    /** A dashboard object was added */\n    Added = 'added',\n\n    /** A dashboard object was removed */\n    Removed = 'removed',\n\n    /** A dashboard object's floating state changed */\n    IsFloatingChanged = 'is-floating-changed',\n\n    /** A dashboard object's visibility changed */\n    IsVisibleChanged = 'is-visible-changed',\n\n    /** A dashboard object's position changed */\n    PositionChanged = 'position-changed',\n\n    /** A dashboard object's size changed */\n    SizeChanged = 'size-changed',\n\n    /** A dashboard object was renamed */\n    NameChanged = 'name-changed',\n\n    /** A dashboard object is selected */\n    Selected = 'selected',\n\n    /** A dashboard object is deselected */\n    Deselected = 'deselected',\n\n    /** Navigate to another dashboard */\n    DashboardChanged = 'dashboard-changed',\n  }\n\n  /**\n   * Valid date ranges for a relative date filter.\n   */\n  export enum DateRangeType {\n    Last = 'last',\n    LastN = 'last-n',\n    Next = 'next',\n    NextN = 'next-n',\n    Current = 'current',\n    ToDate = 'to-date',\n  }\n\n  /**\n   * Enum that represents the types of dialog popup styles.\n   */\n  export enum DialogStyle {\n    Window = 'window',\n    Modal = 'modal',\n    Modeless = 'modeless',\n  }\n\n  export enum EncodingType {\n    Column = 'column',\n    Row = 'row',\n    Page = 'page',\n    Filter = 'filter',\n    MarksType = 'marks-type',\n    MeasureValues = 'measure-values',\n    Color = 'color',\n    Size = 'size',\n    Label = 'label',\n    Detail = 'detail',\n    Tooltip = 'tooltip',\n    Shape = 'shape',\n    Path = 'path',\n    Angle = 'angle',\n    Geometry = 'geometry',\n    Custom = 'custom',\n  }\n\n  /**\n   *  Type of aggregation on a field.\n   */\n  export enum FieldAggregationType {\n    Sum = 'sum',\n    Avg = 'avg',\n    Min = 'min',\n    Max = 'max',\n    Stdev = 'stdev',\n    Stdevp = 'stdevp',\n    Var = 'var',\n    Varp = 'varp',\n    Collect = 'collect',\n    Count = 'count',\n    Countd = 'countd',\n    Median = 'median',\n    Attr = 'attr',\n    None = 'none',\n    Year = 'year',\n    Qtr = 'qtr',\n    Month = 'month',\n    Day = 'day',\n    Hour = 'hour',\n    Minute = 'minute',\n    Second = 'second',\n    Week = 'week',\n    Weekday = 'weekday',\n    MonthYear = 'month-year',\n    Mdy = 'mdy',\n    End = 'end',\n    TruncYear = 'trunc-year',\n    TruncQtr = 'trunc-qtr',\n    TruncMonth = 'trunc-month',\n    TruncWeek = 'trunc-week',\n    TruncDay = 'trunc-day',\n    TruncHour = 'trunc-hour',\n    TruncMinute = 'trunc-minute',\n    TruncSecond = 'trunc-second',\n    Quart1 = 'quart1',\n    Quart3 = 'quart3',\n    Skewness = 'skewness',\n    Kurtosis = 'kurtosis',\n    InOut = 'in-out',\n    User = 'user',\n  }\n\n  /**\n   * Role of a field.\n   */\n  export enum FieldRoleType {\n    Dimension = 'dimension',\n    Measure = 'measure',\n    Unknown = 'unknown',\n  }\n\n  /**\n   * An enumeration of the valid types of filters that can be applied.\n   */\n  export enum FilterType {\n    Categorical = 'categorical',\n    Range = 'range',\n    Hierarchical = 'hierarchical',\n    RelativeDate = 'relative-date',\n  }\n\n  /**\n   * The different update types for applying filter\n   */\n  export enum FilterUpdateType {\n    Add = 'add',\n    All = 'all',\n    Replace = 'replace',\n    Remove = 'remove',\n  }\n\n  /**\n   * The domain type for a filter\n   */\n  export enum FilterDomainType {\n    /**\n     * The domain values that are relevant to the specified filter\n     * i.e. the domain is restricted by a previous filter\n     */\n    Relevant = 'relevant',\n    /**\n     * list of all possible domain values from database\n     */\n    Database = 'database',\n  }\n\n  /**\n   * The option for specifying which values to include for filtering\n   * Indicates what to do with null values for a given filter or mark selection call.\n   */\n  export enum FilterNullOption {\n    NullValues = 'null-values',\n    NonNullValues = 'non-null-values',\n    AllValues = 'all-values',\n  }\n\n  /**\n   * Enum that serves as a filter on the DataValues returned from `getSummaryDataReaderAsync`,\n   * `getUnderlyingTableDataReaderAsync` and `getLogicalTableDataReaderAsync`.\n   * This is an optimization of returned data values only. Tableau versions prior to 2021.2\n   * will pass the data across and populate the DataValue properties.\n   * Please note that all properties not requested will be `undefined` in the DataValue results.\n   * @since 1.5.0\n   */\n  export enum IncludeDataValuesOption {\n    /** DataValues will include all properties.*/\n    AllValues = 'all-values',\n\n    /** DataValues will only include value and nativeValue properties.*/\n    OnlyNativeValues = 'only-native-values',\n\n    /** DataValues will only include formattedValue properties. */\n    OnlyFormattedValues = 'only-formatted-values',\n  }\n\n  /**\n   * Type of mark for a given marks card in a viz.\n   */\n  export enum MarkType {\n    Bar = 'bar',\n    Line = 'line',\n    Area = 'area',\n    Square = 'square',\n    Circle = 'circle',\n    Shape = 'shape',\n    Text = 'text',\n    Map = 'map',\n    Pie = 'pie',\n    GanttBar = 'gantt-bar',\n    Polygon = 'polygon',\n    Heatmap = 'heatmap',\n    VizExtension = 'viz-extension',\n  }\n\n  /**\n   * An enumeration describing the different types of allowable values.\n   * This is used for restricting the domain of a parameter\n   */\n  export enum ParameterValueType {\n    All = 'all',\n    List = 'list',\n    Range = 'range',\n  }\n\n  /**\n   * Date period used in filters and in parameters.\n   */\n  export enum PeriodType {\n    Years = 'years',\n    Quarters = 'quarters',\n    Months = 'months',\n    Weeks = 'weeks',\n    Days = 'days',\n    Hours = 'hours',\n    Minutes = 'minutes',\n    Seconds = 'seconds',\n  }\n\n  export enum QuickTableCalcType {\n    RunningTotal = 'running-total',\n    Difference = 'difference',\n    PercentDifference = 'percent-difference',\n    PercentOfTotal = 'percent-of-total',\n    Rank = 'rank',\n    Percentile = 'percentile',\n    MovingAverage = 'moving-average',\n    YTDTotal = 'ytd-total',\n    CompoundGrowthRate = 'compound-growth-rate',\n    YearOverYearGrowth = 'year-over-year-growth',\n    YTDGrowth = 'ytd-growth',\n    Undefined = 'undefined',\n  }\n\n  /**\n   * Enum for specifying the selection type for select marks api.\n   */\n  export enum SelectionUpdateType {\n    Replace = 'select-replace',\n    Add = 'select-add',\n    Remove = 'select-remove',\n  }\n\n  /**\n   * Enum for specifying the select option for the `extensions.Worksheet.selectTuplesAsync` method.\n   */\n  export enum SelectOptions {\n    /**\n     * Clears existing selection before selecting the tuples specified\n     */\n    Simple = 'select-options-simple',\n    /**\n     * Adds specified tuples to the existing selection\n     */\n    Toggle = 'select-options-toggle',\n  }\n\n  /**\n   * The type of sheet a [[Sheet]] object represents\n   */\n  export enum SheetType {\n    Dashboard = 'dashboard',\n    Story = 'story',\n    Worksheet = 'worksheet',\n  }\n\n  export enum SortDirection {\n    Increasing = 'increasing',\n    Decreasing = 'decreasing',\n  }\n\n  export enum TrendLineModelType {\n    Linear = 'linear',\n    Logarithmic = 'logarithmic',\n    Exponential = 'exponential',\n    Polynomial = 'polynomial',\n  }\n\n  /**\n   * Enum that represents the replay speed of an animation.\n   * @since 1.7.0\n   */\n  export enum ReplaySpeedType {\n    /** Used for setting the replay speed of an animation to 0.5x.*/\n    Slow = 'slow',\n\n    /** Used for setting the replay speed of an animation to 1.0x.*/\n    Normal = 'normal',\n\n    /** Used for setting the replay speed of an animation to 2.0x.*/\n    Fast = 'fast',\n  }\n\n  /**\n   * Enum that represents the selection state of a level in a hierarchical filter\n   * @since Extensions 1.10.0\n   */\n  export enum HierarchicalLevelSelectionState {\n    AllSelected = 'all-selected',\n    NoneSelected = 'none-selected',\n    SomeSelected = 'some-selected',\n    UnknownSelected = 'unknown-selected',\n  }\n\n  /**\n   * ZoneVisibilityType\n   * @deprecated use DashboardObjectVisibilityType\n   */\n  export declare type ZoneVisibilityType = DashboardObjectVisibilityType;\n  export const ZoneVisibilityType = { ...DashboardObjectVisibilityType };\n}\nexport = Tableau;\n"]}