"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * The shared string constants you can use as HTML attributes for the <tableau-viz> and <tableau-authoring-viz> web component.
 * @ignore
 */
var VizSharedAttributes;
(function (VizSharedAttributes) {
    VizSharedAttributes["TouchOptimize"] = "touch-optimize";
    VizSharedAttributes["HideEditInDesktopButton"] = "hide-edit-in-desktop-button";
    VizSharedAttributes["SuppressDefaultEditBehavior"] = "suppress-default-edit-behavior";
    VizSharedAttributes["DisableVersionCheck"] = "disable-version-check";
    VizSharedAttributes["OnEditInDesktopButtonClicked"] = "onEditInDesktopButtonClicked";
    VizSharedAttributes["OnFirstVizSizeKnown"] = "onFirstVizSizeKnown";
    VizSharedAttributes["OnFirstInteractive"] = "onFirstInteractive";
})(VizSharedAttributes = exports.VizSharedAttributes || (exports.VizSharedAttributes = {}));
/**
 * The names of the string constants you can use as HTML attributes for the <tableau-viz> web component.
 * @ignore
 */
var VizAttributes;
(function (VizAttributes) {
    VizAttributes["DisableUrlActionsPopups"] = "disable-url-actions";
    VizAttributes["HideTabs"] = "hide-tabs";
    VizAttributes["Toolbar"] = "toolbar";
    VizAttributes["InstanceIdToClone"] = "instance-id-to-clone";
    VizAttributes["Device"] = "device";
    VizAttributes["HideEditButton"] = "hide-edit-button";
    VizAttributes["OnEditButtonClicked"] = "onEditButtonClicked";
    VizAttributes["OnFilterChanged"] = "onFilterChanged";
    VizAttributes["OnCustomMarkContextMenuEvent"] = "onCustomMarkContextMenuEvent";
    VizAttributes["OnMarkSelectionChanged"] = "onMarkSelectionChanged";
    VizAttributes["OnParameterChanged"] = "onParameterChanged";
    VizAttributes["OnToolbarStateChanged"] = "onToolbarStateChanged";
    VizAttributes["OnUrlAction"] = "onUrlAction";
    VizAttributes["OnTabSwitched"] = "onTabSwitched";
    VizAttributes["OnCustomViewLoaded"] = "onCustomViewLoaded";
    VizAttributes["OnCustomViewRemoved"] = "onCustomViewRemoved";
    VizAttributes["OnCustomViewSaved"] = "onCustomViewSaved";
    VizAttributes["OnCustomViewSetDefault"] = "onCustomViewSetDefault";
    VizAttributes["OnStoryPointSwitched"] = "onStoryPointSwitched";
    VizAttributes["OnSummaryDataChanged"] = "onSummaryDataChanged";
    VizAttributes["OnReadyToReceiveAuthToken"] = "onReadyToReceiveAuthToken";
})(VizAttributes = exports.VizAttributes || (exports.VizAttributes = {}));
/**
 * The names of the string constants you can use as HTML attributes for the <tableau-authoring-viz> web component.
 * @ignore
 */
var VizAuthoringAttributes;
(function (VizAuthoringAttributes) {
    VizAuthoringAttributes["OnWorkbookPublished"] = "onWorkbookPublished";
    VizAuthoringAttributes["OnWorkbookPublishedAs"] = "onWorkbookPublishedAs";
    VizAuthoringAttributes["OnWorkbookReadyToClose"] = "onWorkbookReadyToClose";
    VizAuthoringAttributes["HideCloseButton"] = "hide-close-button";
})(VizAuthoringAttributes = exports.VizAuthoringAttributes || (exports.VizAuthoringAttributes = {}));
/**
 * The names of the string constants you can use as child tags for TableauViz and TableauAuthoringViz custom elements.
 */
var VizChildElements;
(function (VizChildElements) {
    /**
     * Contains a list of filter parameters. Available only in viewing mode.
     */
    VizChildElements["VizFilter"] = "viz-filter";
    /**
     * Contains a name and value for a parameter. Available only in viewing mode.
     */
    VizChildElements["VizParameter"] = "viz-parameter";
    /**
     * Contains a list of custom parameters.  Available in both viewing and authoring modes.
     */
    VizChildElements["CustomParameter"] = "custom-parameter";
    /**
     * Custom styles applicable to the embedded iframe element itself (not inside it). Available in both viewing and authoring modes.
     */
    VizChildElements["IframeStyle"] = "iframe-style";
})(VizChildElements = exports.VizChildElements || (exports.VizChildElements = {}));
var VizChildElementAttributes;
(function (VizChildElementAttributes) {
    VizChildElementAttributes["Field"] = "field";
    VizChildElementAttributes["Value"] = "value";
    VizChildElementAttributes["Name"] = "name";
})(VizChildElementAttributes = exports.VizChildElementAttributes || (exports.VizChildElementAttributes = {}));
//# sourceMappingURL=VizInterfaces.js.map