{"version":3,"file":"StoryInterfaces.js","sourceRoot":"","sources":["../../../../src/ExternalContract/Embedding/StoryInterfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { Sheet } from './SheetInterfaces';\n\nexport interface Story extends Sheet {\n  /**\n   * @returns The currently active story point.\n   */\n  readonly activeStoryPoint: StoryPoint;\n\n  /**\n   * @returns An array of StoryPointInfo objects.\n   */\n  readonly storyPointsInfo: Array<StoryPointInfo>;\n\n  /**\n   * Activates the next story point if there is one. If the current story point is the last one, then it stays active.\n   * @returns A promise that resolves to the active {@link StoryPoint}.\n   */\n  activateNextStoryPointAsync(): Promise<StoryPoint>;\n\n  /**\n   * Activates the previous story point if there is one. If the current story point is the first one, then it stays active.\n   * @returns A promise that resolves to the active {@link StoryPoint}.\n   */\n  activatePreviousStoryPointAsync(): Promise<StoryPoint>;\n\n  /**\n   * Activates the story point at the specified index and returns a promise of the activated StoryPoint.\n   * Throws a {@link EmbeddingErrorCodes.IndexOutOfRange} error if the index is less than zero or greater than or\n   * equal to the number of story points in the array.\n   * @returns A promise that resolves to the active {@link StoryPoint}.\n   */\n  activateStoryPointAsync(index: number): Promise<StoryPoint>;\n\n  /**\n   * Reverts the story point at the specified index and returns a promise of the reverted StoryPointInfo.\n   * Throws a {@link EmbeddingErrorCodes.IndexOutOfRange} error if the index is less than zero or greater than or\n   * equal to the number of story points in the array.\n   * @returns A promise that resolves to the reverted {@link StoryPointInfo}.\n   */\n  revertStoryPointAsync(index: number): Promise<StoryPointInfo>;\n}\n\nexport interface StoryPoint {\n  /**\n   * @returns The zero-based index of this story point within the parent {@link Story}.\n   */\n  readonly index: number;\n\n  /**\n   * @returns The content of the textual description for this story point.\n   */\n  readonly caption: string;\n\n  /**\n   * @returns The value indicating whether the story point is the currently active point in the story.\n   */\n  readonly active: boolean;\n\n  /**\n   * @returns A boolean value indicating whether the story point is updated. If the value is false that means there are no changes from the last time the story point was “captured”.\n   */\n  readonly updated: boolean;\n\n  /**\n   * @returns The {@link Sheet} that this story point contains. This will be undefined if the story point does not have a contained sheet.\n   */\n  readonly containedSheet: Sheet | undefined;\n\n  /**\n   * @returns The {@link Story} object that contains this story point.\n   */\n  readonly parentStory: Story;\n}\n\nexport interface StoryPointInfo {\n  /**\n   * @returns The zero-based index of this story point within the parent {@link Story}.\n   */\n  readonly index: number;\n\n  /**\n   * @returns The content of the textual description for this story point.\n   */\n  readonly caption: string;\n\n  /**\n   * @returns The value indicating whether the story point is the currently active point in the story.\n   */\n  readonly active: boolean;\n\n  /**\n   * @returns A boolean value indicating whether the story point is updated. If the value is false that means there are no changes from the last time the story point was “captured”.\n   */\n  readonly updated: boolean;\n\n  /**\n   * @returns The {@link Story} object that contains this story point.\n   */\n  readonly parentStory: Story;\n}\n"]}